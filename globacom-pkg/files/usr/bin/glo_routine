#!/bin/sh
#ping to a host address and indicate alive status via LEDs

. /lib/functions2.sh
host="`uci get secn.wan.pinghost`"
SIP_LED="dragino2:red:system"

[ "`uci get system.@system[0].debug_inet`" = "1" ] && debug="1"
debug_str_to_file "$(date) Start debug for globastar"

PKG_PID=`ps | grep "glo_routine" | grep -v grep | awk '{print $1}'`
SELF_PID=$$
if [ ! -z "$PKG_PID" ];then
	for pid in $PKG_PID;do 
		if [ "$pid" != "$SELF_PID" ]; then
			kill -s 9 $pid
		fi 
	done
fi

#export gpio1 to control the 3G status LEDs
[ ! -d "/sys/class/gpio/gpio1" ] && echo 1 > /sys/class/gpio/export
echo high > /sys/class/gpio/gpio1/direction

##HAS_INTERNETï¼š 0:no net, 1: has net, 2: first boot
HAS_INTERNET=2
last_reset_asterisk=$(date +%s)
while [ 1 ]
do
	##Show SIGNAL
	SIGNAL=
	SIGNAL=`grep 'SIGNAL=' /var/cellular/status | tail -n 1 | awk -F '[ |,]' '{print $2}'`
	if [ -n "$SIGNAL" ]; then
		echo 0 > /sys/devices/platform/leds-gpio/leds/dragino2:red:wlan/brightness
		echo 0 > /sys/devices/platform/leds-gpio/leds/dragino2:red:lan/brightness
		echo 0 > /sys/devices/platform/leds-gpio/leds/dragino2:red:wan/brightness
		if [ $SIGNAL -le 10 ];then 
			#BAD signal
			echo 1 > /sys/devices/platform/leds-gpio/leds/dragino2:red:wlan/brightness
		elif [ $SIGNAL -lt 15 ];then 
			#Normal signal
			echo 1 > /sys/devices/platform/leds-gpio/leds/dragino2:red:wan/brightness
		elif [ $SIGNAL -lt 32 ];then 
			#GOOD signal
			echo 1 > /sys/devices/platform/leds-gpio/leds/dragino2:red:lan/brightness
		else
			#unknow signal
			echo 1 > /sys/devices/platform/leds-gpio/leds/dragino2:red:wlan/brightness
		fi
	fi
	sleep 5
	
	##Check Net Connection
	if [ -z "`fping -e $host | grep alive`" ]; then
		echo 0 > /sys/class/gpio/gpio1/value
		if [ $HAS_INTERNET = 2 ]; then 
			old_time=$(date +%s)
		fi
		now=$(date +%s)
		HAS_INTERNET=0
		lose_internet=`expr $now - $old_time`
		logger "no internet connection for $lose_internet" 
		if [ $lose_internet -gt 120 ];then
			old_time=$(date +%s)
			#we have lost internet for 120 seconds. need to do something
			#reboot_count=`uci get system.@system[0].reboot_count`
			#debug_str_to_file "$(date): reboot count is: $reboot_count"
			if [ "`uci get secn.wan.wanport`" = "USB-Modem" ];then
				debug_str_to_file "^^^^^^^^^^logread start^^^^^^^^^^^^^^^^^^^^^^"
				debug_cmd_to_file logread
				debug_str_to_file "^^^^^^^^^^dmesg start^^^^^^^^^^^^^^^^^^^^^^^^"
				debug_cmd_to_file dmesg
				debug_str_to_file "^^^^^^^^^^end logread / dmesg^^^^^^^^^^^^^^^^"
				#if [ $reboot_count -le 4 ];then
					[ -f "/etc/rc.d/S61dragino2-si3217x" ] && /etc/init.d/dragino2-si3217x disable && debug_str_to_file "$(date): disable si32176" && reboot
					debug_str_to_file "$(date): reset USB modem"
					echo 20 > /sys/class/gpio/export
					echo high > /sys/class/gpio/gpio20/direction
					sleep 5
					echo 0 > /sys/class/gpio/gpio20/value
					echo 20 > /sys/class/gpio/unexport
					#reboot_count=`expr $reboot_count + 1`
					#uci set system.@system[0].reboot_count=$reboot_count
					#uci commit system
					reboot
				#fi 		
			fi
		fi
	else 
		HAS_INTERNET=1
		if [ ! -f "/etc/rc.d/S61dragino2-si3217x" ];then
			/etc/init.d/dragino2-si3217x enable
			debug_str_to_file "$(date): enable si32176"
			reboot
		fi	
		echo 1 > /sys/class/gpio/gpio1/value		
		old_time=$(date +%s)
	fi
	##check if comgt is running, if not , run it.
	HAS_COMGT=`ps | grep "uc20_status.comgt" | grep -v grep`
	if [ -z "$HAS_COMGT" ];then
		comgt -s /usr/bin/uc20_status.comgt -d /dev/ttyUSB2 &
	fi
	sleep 5
	
	#check register state to voip server
	VOIP_USER_NAME=
	servers=`uci show voip | grep 'server\[[0-9]\]=server' | awk -F '[][]' '{print $2}'`
	for server in $servers; do
		if [ "`uci get voip.@server[$server].protocol`" = "suissephone" ]; then
			VOIP_USER_NAME=`uci get voip.@server[$server].phonenumber`
		fi
		if [ "`uci get voip.@server[$server].protocol`" = "globastar" ]; then
			VOIP_USER_NAME=`uci get voip.@server[$server].username`
		fi
	done
	debug_str_to_file "VOIP_USER_NAME: $VOIP_USER_NAME"
	
	if [ ! -z $VOIP_USER_NAME ]; then
		VOIP_REG_STATE=
		VOIP_REG_STATE=`asterisk -x "sip show registry" | grep $VOIP_USER_NAME | awk {'print $5'}`
		debug_str_to_file "VOIP_REG_STATE: $VOIP_REG_STATE"
		if [ "$VOIP_REG_STATE" = "Registered" ];then
			echo 1 > /sys/devices/platform/leds-gpio/leds/$SIP_LED/brightness
		else
			echo 0 > /sys/devices/platform/leds-gpio/leds/$SIP_LED/brightness
		fi
		sleep 5
		if [ $HAS_INTERNET = 1 ]; then		
			servers=`uci show voip | grep 'server\[[0-9]\]=server' | awk -F '[][]' {'print $2'}`
			username=
			for server in $servers; do
				pro=`uci get voip.@server[$server].protocol`
				if [ "$pro" = "suissephone" ] || [ "$pro" = "globastar" ];then
					username=`uci get voip.@server[$server].username`
				fi
			done
			VOIP_PEER_STATE=
			VOIP_PEER_STATE=`asterisk -x "sip show peers" | grep "$username" | awk {'print $6'}`
			debug_str_to_file "VOIP_PEER_STATE: $VOIP_PEER_STATE"
			if [ "$VOIP_PEER_STATE" != "OK" ] || [ "$VOIP_REG_STATE" != "Registered" ]; then
				now=$(date +%s)
				lose_asterisk=`expr $now - $last_reset_asterisk`
				if [ $lose_asterisk -gt 120 ];then
					logger "dragino: restart Asterisk"
					[ $debug = "1" ] && echo "$(date): reset Asterisk" >> $log_file
					/usr/bin/config2asterisk
					last_reset_asterisk=$(date +%s)
				fi
			fi
		fi
	fi
	sleep 5
done