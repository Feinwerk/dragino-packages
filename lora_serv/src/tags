!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AES_CMAC_CTX	inc/cmac.h	/^    } AES_CMAC_CTX;$/;"	t	typeref:struct:_AES_CMAC_CTX
AES_CMAC_DIGEST_LENGTH	inc/cmac.h	43;"	d
AES_CMAC_Final	src/cmac.c	/^void AES_CMAC_Final(uint8_t digest[AES_CMAC_DIGEST_LENGTH], AES_CMAC_CTX *ctx)$/;"	f
AES_CMAC_Init	src/cmac.c	/^void AES_CMAC_Init(AES_CMAC_CTX *ctx)$/;"	f
AES_CMAC_KEY_LENGTH	inc/cmac.h	42;"	d
AES_CMAC_SetKey	src/cmac.c	/^void AES_CMAC_SetKey(AES_CMAC_CTX *ctx, const uint8_t key[AES_CMAC_KEY_LENGTH])$/;"	f
AES_CMAC_Update	src/cmac.c	/^void AES_CMAC_Update(AES_CMAC_CTX *ctx, const uint8_t *data, uint32_t len)$/;"	f
AES_DEC_PREKEYED	inc/aes.h	42;"	d
AES_ENC_PREKEYED	inc/aes.h	39;"	d
AES_H	inc/aes.h	32;"	d
APPEND_INDENT	src/parson.c	1097;"	d	file:
APPEND_INDENT	src/parson.c	872;"	d	file:
APPEND_STRING	src/parson.c	1096;"	d	file:
APPEND_STRING	src/parson.c	867;"	d	file:
APPKEYLEN	src/dls_utili.c	68;"	d	file:
APPLICATION_SERVER	inc/handle.h	90;"	d
APP_NAME	Makefile	/^APP_NAME:=dragino_lorawan_server$/;"	m
ARRAY_SIZE	src/base64.c	29;"	d	file:
Ack	src/handle.c	/^        uint8_t Ack             : 1;$/;"	m	struct:uLoRaMacFrameCtrl::sCtrlBits	file:
Adr	src/handle.c	/^        uint8_t Adr             : 1;$/;"	m	struct:uLoRaMacFrameCtrl::sCtrlBits	file:
AdrAckReq	src/handle.c	/^        uint8_t AdrAckReq       : 1;$/;"	m	struct:uLoRaMacFrameCtrl::sCtrlBits	file:
AesCmacCtx	src/LoRaMacCrypto.c	/^static AES_CMAC_CTX AesCmacCtx[1];$/;"	v	file:
AesContext	src/LoRaMacCrypto.c	/^static aes_context AesContext;$/;"	v	file:
BPOLY	src/aes.c	76;"	d	file:
BUFF_SIZE	inc/handle.h	84;"	d
Bits	src/handle.c	/^	}Bits;$/;"	m	union:uLoRaMacDLSettings	typeref:struct:uLoRaMacDLSettings::sDLSBits	file:
Bits	src/handle.c	/^	}Bits;$/;"	m	union:uLoRaMacRxDelay	typeref:struct:uLoRaMacRxDelay::sRxDBits	file:
Bits	src/handle.c	/^    }Bits;$/;"	m	union:uLoRaMacFrameCtrl	typeref:struct:uLoRaMacFrameCtrl::sCtrlBits	file:
Bits	src/handle.c	/^    }Bits;$/;"	m	union:uLoRaMacHeader	typeref:struct:uLoRaMacHeader::sHdrBits	file:
CFLAGS	Makefile	/^CFLAGS := -Iinc -DBIGENDIAN -DLG08_LG02$/;"	m
CLASS_A	inc/handle.h	101;"	d
CLASS_B	inc/handle.h	102;"	d
CLASS_C	inc/handle.h	103;"	d
CMD_ADDAPP	src/dls_utili.c	56;"	d	file:
CMD_ADDDEV	src/dls_utili.c	58;"	d	file:
CMD_ADDGW	src/dls_utili.c	52;"	d	file:
CMD_ADDPF	src/dls_utili.c	54;"	d	file:
CMD_DELETE	src/dls_utili.c	62;"	d	file:
CMD_IMPORTCSV	src/dls_utili.c	64;"	d	file:
CMD_LISTAPP	src/dls_utili.c	57;"	d	file:
CMD_LISTDEV	src/dls_utili.c	59;"	d	file:
CMD_LISTGW	src/dls_utili.c	53;"	d	file:
CMD_LISTMSG	src/dls_utili.c	60;"	d	file:
CMD_LISTPF	src/dls_utili.c	55;"	d	file:
CMD_MANDEV	src/dls_utili.c	63;"	d	file:
CMD_UPGW	src/dls_utili.c	61;"	d	file:
CREATEAPPS	inc/db.h	58;"	d
CREATECFG	inc/db.h	104;"	d
CREATECFGTABLE	inc/db.h	113;"	d
CREATEDEVS	inc/db.h	25;"	d
CREATEGWPROFILE	inc/db.h	85;"	d
CREATEGWS	inc/db.h	38;"	d
CREATEUPMSG	inc/db.h	65;"	d
CRIT	src/base64.c	30;"	d	file:
DBPATH	inc/dls_utili.h	17;"	d
DBPATH	inc/handle.h	51;"	d
DB_DLS_UTILI_H	inc/dls_utili.h	10;"	d
DB_SQLITE3_H_	inc/db.h	10;"	d
DEBUG	src/base64.c	33;"	d	file:
DEBUG_BEACON	inc/trace.h	24;"	d
DEBUG_DEBUG	src/dragino_lorawan_server.c	/^int DEBUG_DEBUG = 0;$/;"	v
DEBUG_ERROR	inc/trace.h	29;"	d
DEBUG_ERROR	src/dls_utili.c	73;"	d	file:
DEBUG_ERROR	src/dragino_lorawan_server.c	/^int DEBUG_ERROR = 1;$/;"	v
DEBUG_INFO	inc/trace.h	26;"	d
DEBUG_INFO	src/dragino_lorawan_server.c	/^int DEBUG_INFO = 1;$/;"	v
DEBUG_JIT	inc/trace.h	21;"	d
DEBUG_JIT_ERROR	inc/trace.h	22;"	d
DEBUG_JOIN	src/dragino_lorawan_server.c	/^int DEBUG_JOIN = 0;$/;"	v
DEBUG_LOG	inc/trace.h	25;"	d
DEBUG_PKT_FWD	inc/trace.h	20;"	d
DEBUG_PPM	inc/trace.h	27;"	d
DEBUG_SQL	src/dls_utili.c	72;"	d	file:
DEBUG_SQL	src/dragino_lorawan_server.c	/^int DEBUG_SQL = 0;$/;"	v
DEBUG_STMT	src/db.c	23;"	d	file:
DEBUG_STMT	src/dls_utili.c	75;"	d	file:
DEBUG_TIMERSYNC	inc/trace.h	23;"	d
DEBUG_UPDW	src/dragino_lorawan_server.c	/^int DEBUG_UPDW = 0;$/;"	v
DEBUG_WARNING	inc/trace.h	28;"	d
DEBUG_WARNING	src/dragino_lorawan_server.c	/^int DEBUG_WARNING = 1;$/;"	v
DOWN	src/handle.c	23;"	d	file:
DPOLY	src/aes.c	77;"	d	file:
Del	src/handle.c	/^		uint8_t Del              : 4;$/;"	m	struct:uLoRaMacRxDelay::sRxDBits	file:
FLOAT_FORMAT	src/parson.c	45;"	d	file:
FOptsLen	src/handle.c	/^        uint8_t FOptsLen        : 4;$/;"	m	struct:uLoRaMacFrameCtrl::sCtrlBits	file:
FPending	src/handle.c	/^        uint8_t FPending        : 1;$/;"	m	struct:uLoRaMacFrameCtrl::sCtrlBits	file:
FRAME_LEN	inc/handle.h	49;"	d
FRAME_TYPE_DATA_CONFIRMED_DOWN	src/handle.c	/^    FRAME_TYPE_DATA_CONFIRMED_DOWN   = 0x05,$/;"	e	enum:eLoRaMacFrameType	file:
FRAME_TYPE_DATA_CONFIRMED_UP	src/handle.c	/^    FRAME_TYPE_DATA_CONFIRMED_UP     = 0x04,$/;"	e	enum:eLoRaMacFrameType	file:
FRAME_TYPE_DATA_UNCONFIRMED_DOWN	src/handle.c	/^    FRAME_TYPE_DATA_UNCONFIRMED_DOWN = 0x03,$/;"	e	enum:eLoRaMacFrameType	file:
FRAME_TYPE_DATA_UNCONFIRMED_UP	src/handle.c	/^    FRAME_TYPE_DATA_UNCONFIRMED_UP   = 0x02,$/;"	e	enum:eLoRaMacFrameType	file:
FRAME_TYPE_JOIN_ACCEPT	src/handle.c	/^    FRAME_TYPE_JOIN_ACCEPT           = 0x01,$/;"	e	enum:eLoRaMacFrameType	file:
FRAME_TYPE_JOIN_REQ	src/handle.c	/^    FRAME_TYPE_JOIN_REQ              = 0x00,$/;"	e	enum:eLoRaMacFrameType	file:
FRAME_TYPE_PROPRIETARY	src/handle.c	/^    FRAME_TYPE_PROPRIETARY           = 0x07,$/;"	e	enum:eLoRaMacFrameType	file:
FRAME_TYPE_RFU	src/handle.c	/^    FRAME_TYPE_RFU                   = 0x06,$/;"	e	enum:eLoRaMacFrameType	file:
GENERIC_LIST_H_	inc/generic_list.h	7;"	d
HANDLE_H_	inc/handle.h	18;"	d
HAVE_MEMCPY	src/aes.c	39;"	d	file:
HAVE_UINT_32T	src/aes.c	52;"	d	file:
IGNORE	inc/handle.h	91;"	d
INITMSGSTMT	inc/db.h	132;"	d
INITMSGSTMT	inc/dls_utili.h	24;"	d
INITSTMT	inc/db.h	126;"	d
INITSTMT	inc/dls_utili.h	20;"	d
INSERTAPPS	inc/db.h	120;"	d
INSERTCFG	inc/db.h	124;"	d
INSERTDEVS	inc/db.h	121;"	d
INSERTGWPROFILE	inc/db.h	122;"	d
INSERTGWS	inc/db.h	119;"	d
INSERTUPMSG	inc/db.h	18;"	d
IS_CONT	src/parson.c	67;"	d	file:
IS_NUMBER_INVALID	src/parson.c	57;"	d	file:
IS_NUMBER_INVALID	src/parson.c	59;"	d	file:
JOIN_ACCEPT_DELAY	inc/handle.h	97;"	d
JOIN_ACC_SIZE	src/handle.c	25;"	d	file:
JSONArray	inc/parson.h	/^    JSONArray   = 5,$/;"	e	enum:json_value_type
JSONBoolean	inc/parson.h	/^    JSONBoolean = 6$/;"	e	enum:json_value_type
JSONError	inc/parson.h	/^    JSONError   = -1,$/;"	e	enum:json_value_type
JSONFailure	inc/parson.h	/^    JSONFailure = -1$/;"	e	enum:json_result_t
JSONNull	inc/parson.h	/^    JSONNull    = 1,$/;"	e	enum:json_value_type
JSONNumber	inc/parson.h	/^    JSONNumber  = 3,$/;"	e	enum:json_value_type
JSONObject	inc/parson.h	/^    JSONObject  = 4,$/;"	e	enum:json_value_type
JSONString	inc/parson.h	/^    JSONString  = 2,$/;"	e	enum:json_value_type
JSONSuccess	inc/parson.h	/^    JSONSuccess = 0,$/;"	e	enum:json_result_t
JSON_Array	inc/parson.h	/^typedef struct json_array_t  JSON_Array;$/;"	t	typeref:struct:json_array_t
JSON_Free_Function	inc/parson.h	/^typedef void   (*JSON_Free_Function)(void *);$/;"	t
JSON_MAX	inc/handle.h	88;"	d
JSON_Malloc_Function	inc/parson.h	/^typedef void * (*JSON_Malloc_Function)(size_t);$/;"	t
JSON_Object	inc/parson.h	/^typedef struct json_object_t JSON_Object;$/;"	t	typeref:struct:json_object_t
JSON_Status	inc/parson.h	/^typedef int JSON_Status;$/;"	t
JSON_Value	inc/parson.h	/^typedef struct json_value_t  JSON_Value;$/;"	t	typeref:struct:json_value_t
JSON_Value_Type	inc/parson.h	/^typedef int JSON_Value_Type;$/;"	t
JSON_Value_Value	src/parson.c	/^} JSON_Value_Value;$/;"	t	typeref:union:json_value_value	file:
JUDGEDEVADDR	inc/db.h	19;"	d
JUDGEJOINREPEAT	inc/db.h	15;"	d
JUDGEMSGREPEAT	inc/db.h	20;"	d
KEYHEXS	src/dls_utili.c	70;"	d	file:
KEYLEN	src/dls_utili.c	67;"	d	file:
KEYSIZE	src/dls_utili.c	69;"	d	file:
LIBNOP	Makefile	/^LIBNOP := -lsqlite3 $/;"	m
LIBS	Makefile	/^LIBS := -lsqlite3 -lpthread$/;"	m
LOOKUPAPPKEY	inc/db.h	16;"	d
LOOKUPGWEUI	inc/db.h	14;"	d
LOOKUPNWKSKEY	inc/db.h	21;"	d
LOOKUPPROFILE	inc/db.h	22;"	d
LORAMAC_FRAME_MAXPAYLOAD	inc/handle.h	86;"	d
LORAMAC_MIC_BLOCK_B0_SIZE	src/LoRaMacCrypto.c	32;"	d	file:
LSHIFT	src/cmac.c	42;"	d	file:
List	inc/generic_list.h	/^typedef struct List{$/;"	s
LoRaMacComputeMic	src/LoRaMacCrypto.c	/^void LoRaMacComputeMic( const uint8_t *buffer, uint16_t size, const uint8_t *key, uint32_t address, uint8_t dir, uint32_t sequenceCounter, uint32_t *mic )$/;"	f
LoRaMacDLSettings_t	src/handle.c	/^}LoRaMacDLSettings_t;$/;"	t	typeref:union:uLoRaMacDLSettings	file:
LoRaMacFrameCtrl_t	src/handle.c	/^}LoRaMacFrameCtrl_t;$/;"	t	typeref:union:uLoRaMacFrameCtrl	file:
LoRaMacFrameType_t	src/handle.c	/^}LoRaMacFrameType_t;$/;"	t	typeref:enum:eLoRaMacFrameType	file:
LoRaMacHeader_t	src/handle.c	/^}LoRaMacHeader_t;$/;"	t	typeref:union:uLoRaMacHeader	file:
LoRaMacJoinComputeMic	src/LoRaMacCrypto.c	/^void LoRaMacJoinComputeMic( const uint8_t *buffer, uint16_t size, const uint8_t *key, uint32_t *mic )$/;"	f
LoRaMacJoinComputeSKeys	src/LoRaMacCrypto.c	/^void LoRaMacJoinComputeSKeys( const uint8_t *key, const uint8_t *appNonce, uint16_t devNonce, uint8_t *nwkSKey, uint8_t *appSKey )$/;"	f
LoRaMacJoinDecrypt	src/LoRaMacCrypto.c	/^void LoRaMacJoinDecrypt( const uint8_t *buffer, uint16_t size, const uint8_t *key, uint8_t *decBuffer )$/;"	f
LoRaMacJoinEncrypt	src/LoRaMacCrypto.c	/^void LoRaMacJoinEncrypt( const uint8_t *buffer, uint16_t size, const uint8_t *key, uint8_t *encBuffer ){$/;"	f
LoRaMacPayloadDecrypt	src/LoRaMacCrypto.c	/^void LoRaMacPayloadDecrypt( const uint8_t *buffer, uint16_t size, const uint8_t *key, uint32_t address, uint8_t dir, uint32_t sequenceCounter, uint8_t *decBuffer )$/;"	f
LoRaMacPayloadEncrypt	src/LoRaMacCrypto.c	/^void LoRaMacPayloadEncrypt( const uint8_t *buffer, uint16_t size, const uint8_t *key, uint32_t address, uint8_t dir, uint32_t sequenceCounter, uint8_t *encBuffer )$/;"	f
LoRaMacRxDelay_t	src/handle.c	/^}LoRaMacRxDelay_t;$/;"	t	typeref:union:uLoRaMacRxDelay	file:
MAX	inc/utilities.h	35;"	d
MAX	src/parson.c	51;"	d	file:
MAX_NB_B64	inc/handle.h	93;"	d
MAX_NESTING	src/parson.c	43;"	d	file:
MIN	inc/utilities.h	26;"	d
MSG	inc/dls_utili.h	29;"	d
MSG	inc/handle.h	76;"	d
MSG	inc/trace.h	31;"	d
MSGDBPATH	inc/dls_utili.h	18;"	d
MSGDBPATH	inc/handle.h	54;"	d
MSG_DEBUG	inc/dls_utili.h	31;"	d
MSG_DEBUG	inc/handle.h	77;"	d
MSG_DEBUG	inc/trace.h	32;"	d
MSG_INFO	inc/trace.h	38;"	d
MType	src/handle.c	/^        uint8_t MType           : 3;$/;"	m	struct:uLoRaMacHeader::sHdrBits	file:
M_last	inc/cmac.h	/^            uint8_t        M_last[16];$/;"	m	struct:_AES_CMAC_CTX
M_n	inc/cmac.h	/^            uint32_t       M_n;$/;"	m	struct:_AES_CMAC_CTX
Major	src/handle.c	/^        uint8_t Major           : 2;$/;"	m	struct:uLoRaMacHeader::sHdrBits	file:
Mic	src/LoRaMacCrypto.c	/^static uint8_t Mic[16];$/;"	v	file:
MicBlockB0	src/LoRaMacCrypto.c	/^static uint8_t MicBlockB0[] = { 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,$/;"	v	file:
NAMELEN	src/dls_utili.c	66;"	d	file:
NB_PKT_MAX	inc/handle.h	83;"	d
NO_DELAY	inc/handle.h	96;"	d
NUM_BUF_SIZE	src/parson.c	46;"	d	file:
N_BLOCK	inc/aes.h	59;"	d
N_COL	inc/aes.h	58;"	d
N_MAX_ROUNDS	inc/aes.h	60;"	d
N_ROW	inc/aes.h	57;"	d
Nibble2HexChar	src/utilities.c	/^int8_t Nibble2HexChar( uint8_t a )$/;"	f
Node	inc/generic_list.h	/^typedef struct Node{$/;"	s
OBJDIR	Makefile	/^OBJDIR = obj$/;"	m
OBJECTS	Makefile	/^OBJECTS:=$(OBJDIR)\/$(APP_NAME).o $(OBJDIR)\/base64.o $(OBJDIR)\/parson.o $(OBJDIR)\/aes.o $(OBJDIR)\/cmac.o $(OBJDIR)\/utilities.o $(OBJDIR)\/LoRaMacCrypto.o $(OBJDIR)\/generic_list.o $(OBJDIR)\/db.o $(OBJDIR)\/handle.o$/;"	m
OPT_ADDAPP	src/dls_utili.c	30;"	d	file:
OPT_ADDDEV	src/dls_utili.c	32;"	d	file:
OPT_ADDGW	src/dls_utili.c	26;"	d	file:
OPT_ADDPF	src/dls_utili.c	28;"	d	file:
OPT_APPEUI	src/dls_utili.c	43;"	d	file:
OPT_APPKEY	src/dls_utili.c	46;"	d	file:
OPT_APPNAME	src/dls_utili.c	36;"	d	file:
OPT_APPSKEY	src/dls_utili.c	47;"	d	file:
OPT_DELETE	src/dls_utili.c	45;"	d	file:
OPT_DEVADDR	src/dls_utili.c	40;"	d	file:
OPT_DEVEUI	src/dls_utili.c	41;"	d	file:
OPT_GWEUI	src/dls_utili.c	42;"	d	file:
OPT_IMPORTCSV	src/dls_utili.c	50;"	d	file:
OPT_LISTAPP	src/dls_utili.c	31;"	d	file:
OPT_LISTDEV	src/dls_utili.c	33;"	d	file:
OPT_LISTGW	src/dls_utili.c	27;"	d	file:
OPT_LISTMSG	src/dls_utili.c	39;"	d	file:
OPT_LISTPF	src/dls_utili.c	29;"	d	file:
OPT_MANDEV	src/dls_utili.c	49;"	d	file:
OPT_NWKSKEY	src/dls_utili.c	48;"	d	file:
OPT_PFID	src/dls_utili.c	38;"	d	file:
OPT_PFNAME	src/dls_utili.c	37;"	d	file:
OPT_RX2DR	src/dls_utili.c	34;"	d	file:
OPT_RX2FREQ	src/dls_utili.c	35;"	d	file:
OPT_UPGW	src/dls_utili.c	44;"	d	file:
PKT_PULL_ACK	inc/handle.h	62;"	d
PKT_PULL_DATA	inc/handle.h	60;"	d
PKT_PULL_RESP	inc/handle.h	61;"	d
PKT_PUSH_ACK	inc/handle.h	59;"	d
PKT_PUSH_DATA	inc/handle.h	58;"	d
POW2	inc/utilities.h	43;"	d
PULL_TIMEOUT_MS	inc/handle.h	65;"	d
PUSHPATH	inc/handle.h	55;"	d
PUSH_TIMEOUT_MS	inc/handle.h	64;"	d
RAND_LOCAL_MAX	src/utilities.c	27;"	d	file:
RANGE	inc/handle.h	94;"	d
RECV_DELAY	inc/handle.h	99;"	d
RFU	src/handle.c	/^		uint8_t RFU              : 1;$/;"	m	struct:uLoRaMacDLSettings::sDLSBits	file:
RFU	src/handle.c	/^		uint8_t RFU              : 4;$/;"	m	struct:uLoRaMacRxDelay::sRxDBits	file:
RFU	src/handle.c	/^        uint8_t RFU             : 3;$/;"	m	struct:uLoRaMacHeader::sHdrBits	file:
RX1DRoffset	src/handle.c	/^		uint8_t RX1DRoffset      : 3;$/;"	m	struct:uLoRaMacDLSettings::sDLSBits	file:
RX2DataRate	src/handle.c	/^		uint8_t RX2DataRate      : 4;$/;"	m	struct:uLoRaMacDLSettings::sDLSBits	file:
SEND_INTERVAL_S	inc/handle.h	69;"	d
SIZEOF_TOKEN	src/parson.c	48;"	d	file:
SKIP_CHAR	src/parson.c	49;"	d	file:
SKIP_WHITESPACES	src/parson.c	50;"	d	file:
SOCKET_INTERVAL_MS	inc/handle.h	68;"	d
SOCKET_INTERVAL_S	inc/handle.h	67;"	d
STARTING_CAPACITY	src/parson.c	42;"	d	file:
STR	inc/handle.h	75;"	d
STRINGIFY	inc/handle.h	74;"	d
TSNULL	src/dls_utili.c	77;"	d	file:
UP	src/handle.c	22;"	d	file:
UPDATEDEVINFO	inc/db.h	17;"	d
UPDATEGWINFO	inc/db.h	23;"	d
USE_TABLES	src/aes.c	57;"	d	file:
VERSION	inc/handle.h	72;"	d
VERSION_1	src/aes.c	64;"	d	file:
Value	src/handle.c	/^	uint8_t Value;$/;"	m	union:uLoRaMacDLSettings	file:
Value	src/handle.c	/^	uint8_t Value;$/;"	m	union:uLoRaMacRxDelay	file:
Value	src/handle.c	/^    uint8_t Value;$/;"	m	union:uLoRaMacFrameCtrl	file:
Value	src/handle.c	/^    uint8_t Value;$/;"	m	union:uLoRaMacHeader	file:
WPOLY	src/aes.c	75;"	d	file:
X	inc/cmac.h	/^            uint8_t        X[16];$/;"	m	struct:_AES_CMAC_CTX
XOR	src/cmac.c	49;"	d	file:
_AES_CMAC_CTX	inc/cmac.h	/^typedef struct _AES_CMAC_CTX {$/;"	s
_BASE64_H	inc/base64.h	18;"	d
_CMAC_H_	inc/cmac.h	37;"	d
_CRT_SECURE_NO_WARNINGS	src/parson.c	25;"	d	file:
_LORA_PKTFWD_TIMERSYNC_H	inc/timersync.h	18;"	d
_LORA_PKTFWD_TRACE_H	inc/trace.h	18;"	d
__LORAMAC_CRYPTO_H__	inc/LoRaMacCrypto.h	38;"	d
__UTILITIES_H__	inc/utilities.h	17;"	d
aBlock	src/LoRaMacCrypto.c	/^static uint8_t aBlock[] = { 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,$/;"	v	file:
ackr	inc/handle.h	/^    uint32_t ackr;    \/*Percentage of upstream datagrams that were acknowledged*\/$/;"	m	struct:gwinfo
add_round_key	src/aes.c	/^static void add_round_key( uint_8t d[N_BLOCK], const uint_8t k[N_BLOCK] )$/;"	f	file:
aes_cbc_decrypt	src/aes.c	/^return_type aes_cbc_decrypt( const unsigned char *in, unsigned char *out,$/;"	f
aes_cbc_encrypt	src/aes.c	/^return_type aes_cbc_encrypt( const unsigned char *in, unsigned char *out,$/;"	f
aes_context	inc/aes.h	/^} aes_context;$/;"	t	typeref:struct:__anon1
aes_decrypt	src/aes.c	/^return_type aes_decrypt( const unsigned char in[N_BLOCK], unsigned char out[N_BLOCK], const aes_context ctx[1] )$/;"	f
aes_decrypt_128	src/aes.c	/^void aes_decrypt_128( const unsigned char in[N_BLOCK], unsigned char out[N_BLOCK],$/;"	f
aes_decrypt_256	src/aes.c	/^void aes_decrypt_256( const unsigned char in[N_BLOCK], unsigned char out[N_BLOCK],$/;"	f
aes_encrypt	src/aes.c	/^return_type aes_encrypt( const unsigned char in[N_BLOCK], unsigned char  out[N_BLOCK], const aes_context ctx[1] )$/;"	f
aes_encrypt_128	src/aes.c	/^void aes_encrypt_128( const unsigned char in[N_BLOCK], unsigned char out[N_BLOCK],$/;"	f
aes_encrypt_256	src/aes.c	/^void aes_encrypt_256( const unsigned char in[N_BLOCK], unsigned char out[N_BLOCK],$/;"	f
aes_set_key	src/aes.c	/^return_type aes_set_key( const unsigned char key[], length_type keylen, aes_context ctx[1] )$/;"	f
alti	inc/handle.h	/^    float alti;       \/*GPS altitude of the gateway in meter RX (integer)*\/$/;"	m	struct:gwinfo
app_getopt	src/dls_utili.c	/^static int app_getopt(struct lw_t *cntx, int argc, char **argv) {$/;"	f	file:
app_long_options	src/dls_utili.c	/^struct option app_long_options[] = {$/;"	v	typeref:struct:option
append_indent	src/parson.c	/^static int append_indent(char *buf, int level) {$/;"	f	file:
append_string	src/parson.c	/^static int append_string(char *buf, const char *string) {$/;"	f	file:
appeui	inc/dls_utili.h	/^    char appeui[17];$/;"	m	struct:lw_t
appeui_hex	inc/handle.h	/^    char appeui_hex[17];$/;"	m	struct:devinfo
appkey	inc/dls_utili.h	/^    char appkey[33];$/;"	m	struct:lw_t
appkey	inc/handle.h	/^    uint8_t appkey[16];$/;"	m	struct:devinfo
appkey_hex	inc/handle.h	/^    uint8_t appkey_hex[33];$/;"	m	struct:devinfo
appname	inc/dls_utili.h	/^    char appname[32];$/;"	m	struct:lw_t
appskey	inc/dls_utili.h	/^    char appskey[33];$/;"	m	struct:lw_t
appskey	inc/handle.h	/^    uint8_t appskey[16];$/;"	m	struct:devinfo
appskey_hex	inc/handle.h	/^    uint8_t appskey_hex[33];$/;"	m	struct:devinfo
array	src/parson.c	/^    JSON_Array  *array;$/;"	m	union:json_value_value	file:
as_prepare_frame	src/handle.c	/^static void as_prepare_frame(uint8_t *frame_payload, uint16_t devnonce, uint8_t* appkey, uint32_t devaddr, uint8_t *nwkskey, uint8_t *appskey) {$/;"	f	file:
assign_msg_down	src/handle.c	/^void assign_msg_down(void* data, const void* msg) {$/;"	f
b64_to_bin	src/base64.c	/^int b64_to_bin(const char * in, int size, uint8_t * out, int max_len) {$/;"	f
b64_to_bin_nopad	src/base64.c	/^int b64_to_bin_nopad(const char * in, int size, uint8_t * out, int max_len) {$/;"	f
bin_to_b64	src/base64.c	/^int bin_to_b64(const uint8_t * in, int size, char * out, int max_len) {$/;"	f
bin_to_b64_nopad	src/base64.c	/^int bin_to_b64_nopad(const uint8_t * in, int size, char * out, int max_len) {$/;"	f
block_copy	src/aes.c	303;"	d	file:
block_copy	src/aes.c	306;"	d	file:
block_copy_nn	src/aes.c	302;"	d	file:
block_copy_nn	src/aes.c	305;"	d	file:
boolean	src/parson.c	/^    int          boolean;$/;"	m	union:json_value_value	file:
capacity	src/parson.c	/^    size_t       capacity;$/;"	m	struct:json_array_t	file:
capacity	src/parson.c	/^    size_t       capacity;$/;"	m	struct:json_object_t	file:
chan	inc/handle.h	/^	uint8_t  chan;     \/*Concentrator "IF" channel used for RX (unsigned integer)*\/$/;"	m	struct:metadata
char_to_code	src/base64.c	/^uint8_t char_to_code(char x) {$/;"	f
cmd	inc/dls_utili.h	/^    uint8_t cmd;$/;"	m	struct:lw_t
cntx	src/dragino_lorawan_server.c	/^struct context cntx = { '\\0' };	\/* sqlite3 database context *\/$/;"	v	typeref:struct:context
code_62	src/base64.c	/^static char code_62 = '+';	\/* RFC 1421 standard character for code 62 *\/$/;"	v	file:
code_63	src/base64.c	/^static char code_63 = '\/';	\/* RFC 1421 standard character for code 63 *\/$/;"	v	file:
code_pad	src/base64.c	/^static char code_pad = '=';	\/* RFC 1421 padding character if padding *\/$/;"	v	file:
code_to_char	src/base64.c	/^char code_to_char(uint8_t x) {$/;"	f
codr	inc/handle.h	/^	char     codr[4];  \/*LoRa ECC coding rate identifier*\/$/;"	m	struct:metadata
compare_msg_down	src/handle.c	/^int compare_msg_down(const void* data, const void* key) {$/;"	f
context	inc/db.h	/^struct context {$/;"	s
copy_and_key	src/aes.c	/^static void copy_and_key( void *d, const void *s, const void *k )$/;"	f	file:
copy_block	src/aes.c	/^static void copy_block( void *d, const void *s )$/;"	f	file:
copy_block_nn	src/aes.c	/^static void copy_block_nn( uint_8t * d, const uint_8t *s, uint_8t nn )$/;"	f	file:
copy_msg_down	src/handle.c	/^void copy_msg_down(void* data, const void* msg) {$/;"	f
count	src/parson.c	/^    size_t       count;$/;"	m	struct:json_array_t	file:
count	src/parson.c	/^    size_t       count;$/;"	m	struct:json_object_t	file:
csvpath	inc/dls_utili.h	/^    char csvpath[48];$/;"	m	struct:lw_t
d2	src/aes.c	84;"	d	file:
data	inc/generic_list.h	/^	void* data;$/;"	m	struct:Node
datrf	inc/handle.h	/^	uint32_t datrf;    \/*data rate for FSK*\/$/;"	m	struct:metadata
datrl	inc/handle.h	/^	char     datrl[10];\/* data rate for LORA*\/$/;"	m	struct:metadata
db	inc/db.h	/^	sqlite3* db;$/;"	m	struct:context
db	inc/dls_utili.h	/^    sqlite3 *db;$/;"	m	struct:lw_t
db_createtb	src/db.c	/^static bool db_createtb(struct context* cntx) {$/;"	f	file:
db_destroy	src/db.c	/^void db_destroy(struct context* cntx) {$/;"	f
db_destroy	src/dls_utili.c	/^void db_destroy(struct lw_t* cntx) {$/;"	f
db_init	src/db.c	/^bool db_init(const char* dbpath, struct context* cntx) {$/;"	f
db_init	src/dls_utili.c	/^bool db_init(const char* dbpath, struct lw_t* cntx) {$/;"	f
db_insert_upmsg	src/db.c	/^bool db_insert_upmsg(sqlite3_stmt* stmt, void* devdata, void* metadata, void* payload) {$/;"	f
db_judge_devaddr	src/db.c	/^bool db_judge_devaddr(sqlite3_stmt* stmt, void* data) {$/;"	f
db_judge_joinrepeat	src/db.c	/^bool db_judge_joinrepeat(sqlite3_stmt* stmt, void* data) {$/;"	f
db_judge_msgrepeat	src/db.c	/^bool db_judge_msgrepeat(sqlite3_stmt* stmt, char* deveui, uint32_t tmst) {$/;"	f
db_lookup_appkey	src/db.c	/^bool db_lookup_appkey(sqlite3_stmt* stmt, void* data) {$/;"	f
db_lookup_gweui	src/db.c	/^bool db_lookup_gweui(sqlite3_stmt* stmt, char *gweui) {$/;"	f
db_lookup_nwkskey	src/db.c	/^bool db_lookup_nwkskey(sqlite3_stmt* stmt, void* data) {$/;"	f
db_lookup_profile	src/db.c	/^bool db_lookup_profile(sqlite3_stmt* stmt, char *gweui, int* rx2dr, float* rx2freq) {$/;"	f
db_step	src/db.c	/^static bool db_step(sqlite3_stmt* stmt, void (*rowcallback)(sqlite3_stmt* stmt, void* data), void* data) {$/;"	f	file:
db_step	src/dls_utili.c	/^static bool db_step(sqlite3_stmt* stmt, void (*rowcallback)(sqlite3_stmt* stmt, void* data), void* data) {$/;"	f	file:
db_update_devinfo	src/db.c	/^bool db_update_devinfo(sqlite3_stmt* stmt, void* data) {$/;"	f
db_update_gwinfo	src/db.c	/^bool db_update_gwinfo(sqlite3_stmt* stmt, void* data) { $/;"	f
destroy_msg_down	src/handle.c	/^void destroy_msg_down(void* msg) {$/;"	f
devaddr	inc/dls_utili.h	/^    char devaddr[9];$/;"	m	struct:lw_t
devaddr	inc/handle.h	/^	uint32_t devaddr;     $/;"	m	struct:devinfo
devaddr	inc/handle.h	/^	uint32_t devaddr;  \/* gateway address for as downlink *\/$/;"	m	struct:jsondata
devaddr_hex	inc/handle.h	/^    char devaddr_hex[9];$/;"	m	struct:devinfo
deveui	inc/dls_utili.h	/^    char deveui[17];$/;"	m	struct:lw_t
deveui_hex	inc/handle.h	/^	char deveui_hex[17];$/;"	m	struct:jsondata
deveui_hex	inc/handle.h	/^    char deveui_hex[17];$/;"	m	struct:devinfo
devinfo	inc/handle.h	/^struct devinfo {$/;"	s
devnonce	inc/handle.h	/^    uint16_t devnonce;$/;"	m	struct:devinfo
devnonce_hex	inc/handle.h	/^    char devnonce_hex[7];$/;"	m	struct:devinfo
dwnb	inc/handle.h	/^    uint32_t dwnb;    \/*Number of downlink datagrams received (unsigned integer)*\/$/;"	m	struct:gwinfo
eLoRaMacFrameType	src/handle.c	/^typedef enum eLoRaMacFrameType$/;"	g	file:
exit_sig	src/dragino_lorawan_server.c	/^static bool exit_sig = false;$/;"	v	file:
f1	src/aes.c	79;"	d	file:
f2	src/aes.c	80;"	d	file:
f3	src/aes.c	86;"	d	file:
f4	src/aes.c	81;"	d	file:
f8	src/aes.c	82;"	d	file:
f9	src/aes.c	87;"	d	file:
fb	src/aes.c	88;"	d	file:
fcntup	inc/handle.h	/^	uint16_t fcntup;     $/;"	m	struct:metadata
fd	src/aes.c	89;"	d	file:
fe	src/aes.c	90;"	d	file:
fport	inc/handle.h	/^	uint8_t fport;     $/;"	m	struct:metadata
free	src/parson.c	54;"	d	file:
freekey	src/dls_utili.c	/^static void freekey(struct lw_t *lws) {$/;"	f	file:
freq	inc/handle.h	/^	double 	 freq;     \/*RX central frequency in MHz (unsigned float, Hz precision)*\/$/;"	m	struct:metadata
fwd_affine	src/aes.c	/^uint_8t fwd_affine(const uint_8t x)$/;"	f
genkey	src/dls_utili.c	/^static char *genkey(char *key, uint8_t len) {$/;"	f	file:
genname	src/dls_utili.c	/^static char *genname(char *name, uint8_t len) {$/;"	f	file:
get_quoted_string	src/parson.c	/^static char * get_quoted_string(const char **string) {$/;"	f	file:
gf_inv	src/aes.c	/^static uint_8t gf_inv(const uint_8t x)$/;"	f	file:
gfm2_sb	src/aes.c	209;"	d	file:
gfm2_sb	src/aes.c	292;"	d	file:
gfm2_sbox	src/aes.c	/^static const uint_8t gfm2_sbox[256] = sb_data(f2);$/;"	v	file:
gfm3_sb	src/aes.c	210;"	d	file:
gfm3_sb	src/aes.c	293;"	d	file:
gfm3_sbox	src/aes.c	/^static const uint_8t gfm3_sbox[256] = sb_data(f3);$/;"	v	file:
gfm_9	src/aes.c	211;"	d	file:
gfm_9	src/aes.c	294;"	d	file:
gfm_b	src/aes.c	212;"	d	file:
gfm_b	src/aes.c	295;"	d	file:
gfm_d	src/aes.c	213;"	d	file:
gfm_d	src/aes.c	296;"	d	file:
gfm_e	src/aes.c	214;"	d	file:
gfm_e	src/aes.c	297;"	d	file:
gfmul_9	src/aes.c	/^static const uint_8t gfmul_9[256] = mm_data(f9);$/;"	v	file:
gfmul_b	src/aes.c	/^static const uint_8t gfmul_b[256] = mm_data(fb);$/;"	v	file:
gfmul_d	src/aes.c	/^static const uint_8t gfmul_d[256] = mm_data(fd);$/;"	v	file:
gfmul_e	src/aes.c	/^static const uint_8t gfmul_e[256] = mm_data(fe);$/;"	v	file:
gw_list	src/dragino_lorawan_server.c	/^static linked_list gw_list;$/;"	v	file:
gwaddr	inc/handle.h	/^	char    gwaddr[16];$/;"	m	struct:metadata
gwaddr	inc/handle.h	/^	char gwaddr[16];\/*gateway address*\/$/;"	m	struct:pkt_info
gwaddr	inc/handle.h	/^	char*  gwaddr;$/;"	m	struct:msg_down
gweui	inc/dls_utili.h	/^    char gweui[17];$/;"	m	struct:lw_t
gweui	inc/handle.h	/^    char* gweui;$/;"	m	struct:gwinfo
gweui_hex	inc/handle.h	/^	char gweui_hex[17];\/*gateway address*\/$/;"	m	struct:pkt_info
gweui_hex	inc/handle.h	/^    char    gweui_hex[17];$/;"	m	struct:metadata
gwinfo	inc/handle.h	/^struct gwinfo {$/;"	s
gwserv	src/dragino_lorawan_server.c	/^static char gwserv[64] = "localhost";$/;"	v	file:
head	inc/generic_list.h	/^	struct Node* head;$/;"	m	struct:List	typeref:struct:List::Node
hex_char_to_int	src/parson.c	/^static int hex_char_to_int(char c) {$/;"	f	file:
hibit	src/aes.c	/^static uint_8t hibit(const uint_8t x)$/;"	f	file:
i82hexstr	src/handle.c	/^void i82hexstr(uint8_t* uint, char* str, int size) {$/;"	f
insertupmsg	inc/db.h	/^	sqlite3_stmt* insertupmsg; $/;"	m	struct:context
inv_affine	src/aes.c	/^uint_8t inv_affine(const uint_8t x)$/;"	f
inv_mix_sub_columns	src/aes.c	/^  static void inv_mix_sub_columns( uint_8t dt[N_BLOCK] )$/;"	f	file:
inv_shift_sub_rows	src/aes.c	/^static void inv_shift_sub_rows( uint_8t st[N_BLOCK] )$/;"	f	file:
invert	src/dls_utili.c	/^static char *invert(char *dst, const char *src, uint8_t len) {$/;"	f	file:
is_box	src/aes.c	208;"	d	file:
is_box	src/aes.c	291;"	d	file:
is_decimal	src/parson.c	/^static int is_decimal(const char *string, size_t length) {$/;"	f	file:
is_valid_utf8	src/parson.c	/^static int is_valid_utf8(const char *string, size_t string_len) {$/;"	f	file:
isb_data	src/aes.c	128;"	d	file:
isbox	src/aes.c	/^static const uint_8t isbox[256] = isb_data(f1);$/;"	v	file:
items	src/parson.c	/^    JSON_Value **items;$/;"	m	struct:json_array_t	file:
json_array	src/parson.c	/^JSON_Array * json_array  (const JSON_Value *value) {$/;"	f
json_array_add	src/parson.c	/^static JSON_Status json_array_add(JSON_Array *array, JSON_Value *value) {$/;"	f	file:
json_array_append_boolean	src/parson.c	/^JSON_Status json_array_append_boolean(JSON_Array *array, int boolean) {$/;"	f
json_array_append_null	src/parson.c	/^JSON_Status json_array_append_null(JSON_Array *array) {$/;"	f
json_array_append_number	src/parson.c	/^JSON_Status json_array_append_number(JSON_Array *array, double number) {$/;"	f
json_array_append_string	src/parson.c	/^JSON_Status json_array_append_string(JSON_Array *array, const char *string) {$/;"	f
json_array_append_value	src/parson.c	/^JSON_Status json_array_append_value(JSON_Array *array, JSON_Value *value) {$/;"	f
json_array_clear	src/parson.c	/^JSON_Status json_array_clear(JSON_Array *array) {$/;"	f
json_array_free	src/parson.c	/^static void json_array_free(JSON_Array *array) {$/;"	f	file:
json_array_get_array	src/parson.c	/^JSON_Array * json_array_get_array(const JSON_Array *array, size_t index) {$/;"	f
json_array_get_boolean	src/parson.c	/^int json_array_get_boolean(const JSON_Array *array, size_t index) {$/;"	f
json_array_get_count	src/parson.c	/^size_t json_array_get_count(const JSON_Array *array) {$/;"	f
json_array_get_number	src/parson.c	/^double json_array_get_number(const JSON_Array *array, size_t index) {$/;"	f
json_array_get_object	src/parson.c	/^JSON_Object * json_array_get_object(const JSON_Array *array, size_t index) {$/;"	f
json_array_get_string	src/parson.c	/^const char * json_array_get_string(const JSON_Array *array, size_t index) {$/;"	f
json_array_get_value	src/parson.c	/^JSON_Value * json_array_get_value(const JSON_Array *array, size_t index) {$/;"	f
json_array_get_wrapping_value	src/parson.c	/^JSON_Value * json_array_get_wrapping_value(const JSON_Array *array) {$/;"	f
json_array_init	src/parson.c	/^static JSON_Array * json_array_init(JSON_Value *wrapping_value) {$/;"	f	file:
json_array_remove	src/parson.c	/^JSON_Status json_array_remove(JSON_Array *array, size_t ix) {$/;"	f
json_array_replace_boolean	src/parson.c	/^JSON_Status json_array_replace_boolean(JSON_Array *array, size_t i, int boolean) {$/;"	f
json_array_replace_null	src/parson.c	/^JSON_Status json_array_replace_null(JSON_Array *array, size_t i) {$/;"	f
json_array_replace_number	src/parson.c	/^JSON_Status json_array_replace_number(JSON_Array *array, size_t i, double number) {$/;"	f
json_array_replace_string	src/parson.c	/^JSON_Status json_array_replace_string(JSON_Array *array, size_t i, const char* string) {$/;"	f
json_array_replace_value	src/parson.c	/^JSON_Status json_array_replace_value(JSON_Array *array, size_t ix, JSON_Value *value) {$/;"	f
json_array_resize	src/parson.c	/^static JSON_Status json_array_resize(JSON_Array *array, size_t new_capacity) {$/;"	f	file:
json_array_t	src/parson.c	/^struct json_array_t {$/;"	s	file:
json_boolean	src/parson.c	/^int json_boolean(const JSON_Value *value) {$/;"	f
json_content	inc/handle.h	/^	char json_content[JSON_MAX];$/;"	m	struct:pkt
json_free_serialized_string	src/parson.c	/^void json_free_serialized_string(char *string) {$/;"	f
json_number	src/parson.c	/^double json_number (const JSON_Value *value) {$/;"	f
json_object	src/parson.c	/^JSON_Object * json_object (const JSON_Value *value) {$/;"	f
json_object_add	src/parson.c	/^static JSON_Status json_object_add(JSON_Object *object, const char *name, JSON_Value *value) {$/;"	f	file:
json_object_addn	src/parson.c	/^static JSON_Status json_object_addn(JSON_Object *object, const char *name, size_t name_len, JSON_Value *value) {$/;"	f	file:
json_object_clear	src/parson.c	/^JSON_Status json_object_clear(JSON_Object *object) {$/;"	f
json_object_dotget_array	src/parson.c	/^JSON_Array * json_object_dotget_array(const JSON_Object *object, const char *name) {$/;"	f
json_object_dotget_boolean	src/parson.c	/^int json_object_dotget_boolean(const JSON_Object *object, const char *name) {$/;"	f
json_object_dotget_number	src/parson.c	/^double json_object_dotget_number(const JSON_Object *object, const char *name) {$/;"	f
json_object_dotget_object	src/parson.c	/^JSON_Object * json_object_dotget_object(const JSON_Object *object, const char *name) {$/;"	f
json_object_dotget_string	src/parson.c	/^const char * json_object_dotget_string(const JSON_Object *object, const char *name) {$/;"	f
json_object_dotget_value	src/parson.c	/^JSON_Value * json_object_dotget_value(const JSON_Object *object, const char *name) {$/;"	f
json_object_dothas_value	src/parson.c	/^int json_object_dothas_value (const JSON_Object *object, const char *name) {$/;"	f
json_object_dothas_value_of_type	src/parson.c	/^int json_object_dothas_value_of_type(const JSON_Object *object, const char *name, JSON_Value_Type type) {$/;"	f
json_object_dotremove	src/parson.c	/^JSON_Status json_object_dotremove(JSON_Object *object, const char *name) {$/;"	f
json_object_dotremove_internal	src/parson.c	/^static JSON_Status json_object_dotremove_internal(JSON_Object *object, const char *name, int free_value) {$/;"	f	file:
json_object_dotset_boolean	src/parson.c	/^JSON_Status json_object_dotset_boolean(JSON_Object *object, const char *name, int boolean) {$/;"	f
json_object_dotset_null	src/parson.c	/^JSON_Status json_object_dotset_null(JSON_Object *object, const char *name) {$/;"	f
json_object_dotset_number	src/parson.c	/^JSON_Status json_object_dotset_number(JSON_Object *object, const char *name, double number) {$/;"	f
json_object_dotset_string	src/parson.c	/^JSON_Status json_object_dotset_string(JSON_Object *object, const char *name, const char *string) {$/;"	f
json_object_dotset_value	src/parson.c	/^JSON_Status json_object_dotset_value(JSON_Object *object, const char *name, JSON_Value *value) {$/;"	f
json_object_free	src/parson.c	/^static void json_object_free(JSON_Object *object) {$/;"	f	file:
json_object_get_array	src/parson.c	/^JSON_Array * json_object_get_array(const JSON_Object *object, const char *name) {$/;"	f
json_object_get_boolean	src/parson.c	/^int json_object_get_boolean(const JSON_Object *object, const char *name) {$/;"	f
json_object_get_count	src/parson.c	/^size_t json_object_get_count(const JSON_Object *object) {$/;"	f
json_object_get_name	src/parson.c	/^const char * json_object_get_name(const JSON_Object *object, size_t index) {$/;"	f
json_object_get_number	src/parson.c	/^double json_object_get_number(const JSON_Object *object, const char *name) {$/;"	f
json_object_get_object	src/parson.c	/^JSON_Object * json_object_get_object(const JSON_Object *object, const char *name) {$/;"	f
json_object_get_string	src/parson.c	/^const char * json_object_get_string(const JSON_Object *object, const char *name) {$/;"	f
json_object_get_value	src/parson.c	/^JSON_Value * json_object_get_value(const JSON_Object *object, const char *name) {$/;"	f
json_object_get_value_at	src/parson.c	/^JSON_Value * json_object_get_value_at(const JSON_Object *object, size_t index) {$/;"	f
json_object_get_wrapping_value	src/parson.c	/^JSON_Value *json_object_get_wrapping_value(const JSON_Object *object) {$/;"	f
json_object_getn_value	src/parson.c	/^static JSON_Value * json_object_getn_value(const JSON_Object *object, const char *name, size_t name_len) {$/;"	f	file:
json_object_has_value	src/parson.c	/^int json_object_has_value (const JSON_Object *object, const char *name) {$/;"	f
json_object_has_value_of_type	src/parson.c	/^int json_object_has_value_of_type(const JSON_Object *object, const char *name, JSON_Value_Type type) {$/;"	f
json_object_init	src/parson.c	/^static JSON_Object * json_object_init(JSON_Value *wrapping_value) {$/;"	f	file:
json_object_remove	src/parson.c	/^JSON_Status json_object_remove(JSON_Object *object, const char *name) {$/;"	f
json_object_remove_internal	src/parson.c	/^static JSON_Status json_object_remove_internal(JSON_Object *object, const char *name, int free_value) {$/;"	f	file:
json_object_resize	src/parson.c	/^static JSON_Status json_object_resize(JSON_Object *object, size_t new_capacity) {$/;"	f	file:
json_object_set_boolean	src/parson.c	/^JSON_Status json_object_set_boolean(JSON_Object *object, const char *name, int boolean) {$/;"	f
json_object_set_null	src/parson.c	/^JSON_Status json_object_set_null(JSON_Object *object, const char *name) {$/;"	f
json_object_set_number	src/parson.c	/^JSON_Status json_object_set_number(JSON_Object *object, const char *name, double number) {$/;"	f
json_object_set_string	src/parson.c	/^JSON_Status json_object_set_string(JSON_Object *object, const char *name, const char *string) {$/;"	f
json_object_set_value	src/parson.c	/^JSON_Status json_object_set_value(JSON_Object *object, const char *name, JSON_Value *value) {$/;"	f
json_object_t	src/parson.c	/^struct json_object_t {$/;"	s	file:
json_parse_file	src/parson.c	/^JSON_Value * json_parse_file(const char *filename) {$/;"	f
json_parse_file_with_comments	src/parson.c	/^JSON_Value * json_parse_file_with_comments(const char *filename) {$/;"	f
json_parse_string	src/parson.c	/^JSON_Value * json_parse_string(const char *string) {$/;"	f
json_parse_string_with_comments	src/parson.c	/^JSON_Value * json_parse_string_with_comments(const char *string) {$/;"	f
json_result_t	inc/parson.h	/^enum json_result_t {$/;"	g
json_serialization_size	src/parson.c	/^size_t json_serialization_size(const JSON_Value *value) {$/;"	f
json_serialization_size_pretty	src/parson.c	/^size_t json_serialization_size_pretty(const JSON_Value *value) {$/;"	f
json_serialize_string	src/parson.c	/^static int json_serialize_string(const char *string, char *buf) {$/;"	f	file:
json_serialize_to_buffer	src/parson.c	/^JSON_Status json_serialize_to_buffer(const JSON_Value *value, char *buf, size_t buf_size_in_bytes) {$/;"	f
json_serialize_to_buffer_pretty	src/parson.c	/^JSON_Status json_serialize_to_buffer_pretty(const JSON_Value *value, char *buf, size_t buf_size_in_bytes) {$/;"	f
json_serialize_to_buffer_r	src/parson.c	/^static int json_serialize_to_buffer_r(const JSON_Value *value, char *buf, int level, int is_pretty, char *num_buf)$/;"	f	file:
json_serialize_to_file	src/parson.c	/^JSON_Status json_serialize_to_file(const JSON_Value *value, const char *filename) {$/;"	f
json_serialize_to_file_pretty	src/parson.c	/^JSON_Status json_serialize_to_file_pretty(const JSON_Value *value, const char *filename) {$/;"	f
json_serialize_to_string	src/parson.c	/^char * json_serialize_to_string(const JSON_Value *value) {$/;"	f
json_serialize_to_string_pretty	src/parson.c	/^char * json_serialize_to_string_pretty(const JSON_Value *value) {$/;"	f
json_set_allocation_functions	src/parson.c	/^void json_set_allocation_functions(JSON_Malloc_Function malloc_fun, JSON_Free_Function free_fun) {$/;"	f
json_set_escape_slashes	src/parson.c	/^void json_set_escape_slashes(int escape_slashes) {$/;"	f
json_string	inc/handle.h	/^	char*  json_string;$/;"	m	struct:msg_down
json_string	src/parson.c	/^const char * json_string (const JSON_Value *value) {$/;"	f
json_type	src/parson.c	/^JSON_Value_Type json_type(const JSON_Value *value) {$/;"	f
json_validate	src/parson.c	/^JSON_Status json_validate(const JSON_Value *schema, const JSON_Value *value) {$/;"	f
json_value_deep_copy	src/parson.c	/^JSON_Value * json_value_deep_copy(const JSON_Value *value) {$/;"	f
json_value_equals	src/parson.c	/^int json_value_equals(const JSON_Value *a, const JSON_Value *b) {$/;"	f
json_value_free	src/parson.c	/^void json_value_free(JSON_Value *value) {$/;"	f
json_value_get_array	src/parson.c	/^JSON_Array * json_value_get_array(const JSON_Value *value) {$/;"	f
json_value_get_boolean	src/parson.c	/^int json_value_get_boolean(const JSON_Value *value) {$/;"	f
json_value_get_number	src/parson.c	/^double json_value_get_number(const JSON_Value *value) {$/;"	f
json_value_get_object	src/parson.c	/^JSON_Object * json_value_get_object(const JSON_Value *value) {$/;"	f
json_value_get_parent	src/parson.c	/^JSON_Value * json_value_get_parent (const JSON_Value *value) {$/;"	f
json_value_get_string	src/parson.c	/^const char * json_value_get_string(const JSON_Value *value) {$/;"	f
json_value_get_type	src/parson.c	/^JSON_Value_Type json_value_get_type(const JSON_Value *value) {$/;"	f
json_value_init_array	src/parson.c	/^JSON_Value * json_value_init_array(void) {$/;"	f
json_value_init_boolean	src/parson.c	/^JSON_Value * json_value_init_boolean(int boolean) {$/;"	f
json_value_init_null	src/parson.c	/^JSON_Value * json_value_init_null(void) {$/;"	f
json_value_init_number	src/parson.c	/^JSON_Value * json_value_init_number(double number) {$/;"	f
json_value_init_object	src/parson.c	/^JSON_Value * json_value_init_object(void) {$/;"	f
json_value_init_string	src/parson.c	/^JSON_Value * json_value_init_string(const char *string) {$/;"	f
json_value_init_string_no_copy	src/parson.c	/^static JSON_Value * json_value_init_string_no_copy(char *string) {$/;"	f	file:
json_value_t	src/parson.c	/^struct json_value_t {$/;"	s	file:
json_value_type	inc/parson.h	/^enum json_value_type {$/;"	g
json_value_value	src/parson.c	/^typedef union json_value_value {$/;"	u	file:
jsondata	inc/handle.h	/^struct jsondata {$/;"	s
judge_devaddr	src/db.c	/^static void judge_devaddr(sqlite3_stmt* stmt, void* data) {$/;"	f	file:
judgedevaddr	inc/db.h	/^	sqlite3_stmt* judgedevaddr; $/;"	m	struct:context
judgejoinrepeat	inc/db.h	/^	sqlite3_stmt* judgejoinrepeat;$/;"	m	struct:context
judgemsgrepeat	inc/db.h	/^	sqlite3_stmt* judgemsgrepeat; $/;"	m	struct:context
ksch	inc/aes.h	/^{   uint_8t ksch[(N_MAX_ROUNDS + 1) * N_BLOCK];$/;"	m	struct:__anon1
lati	inc/handle.h	/^    float lati;       \/*GPS latitude of the gateway in degree (float, N is +)*\/$/;"	m	struct:gwinfo
length	inc/generic_list.h	/^	long  length;$/;"	m	struct:List
length_type	inc/aes.h	/^typedef uint_8t length_type;$/;"	t
linked_list	inc/generic_list.h	/^}linked_list, *plist;$/;"	t	typeref:struct:List
list_delete_at_head	src/generic_list.c	/^void list_delete_at_head(plist list, void(*destroy)(void*)) {$/;"	f
list_destroy	src/generic_list.c	/^void list_destroy(plist list, void(*destroy)(void*)) {$/;"	f
list_init	src/generic_list.c	/^void list_init(plist list) {$/;"	f
list_insert_at_tail	src/generic_list.c	/^void list_insert_at_tail(plist list, void* data, int size, void(*assign)(void*, const void*)) {$/;"	f
list_is_empty	src/generic_list.c	/^bool list_is_empty(plist list) {$/;"	f
list_node	inc/generic_list.h	/^}list_node, *pnode;$/;"	t	typeref:struct:Node
list_search	src/generic_list.c	/^bool list_search(plist list, void* key, void* data, int(*compare)(const void*, const void*), void(*deep_copy)(void*,const void*)) {$/;"	f
list_search_and_delete	src/generic_list.c	/^bool list_search_and_delete(plist list, void* key, void* data, int(*compare)(const void*, const void*), void(*deep_copy)(void*, const void*), void(*destroy)(void*)) {$/;"	f
list_search_and_update	src/generic_list.c	/^void list_search_and_update (plist list, void* key, void* new_data, int size, int(*compare)(const void*, const void*),void(*assign)(void*, const void*)) {$/;"	f
listapp	src/dls_utili.c	/^static void listapp(sqlite3_stmt *stmt, void* data) {$/;"	f	file:
listdev	src/dls_utili.c	/^static void listdev(sqlite3_stmt *stmt, void* data) {$/;"	f	file:
listgw	src/dls_utili.c	/^static void listgw(sqlite3_stmt *stmt, void* data) {$/;"	f	file:
listmsg	src/dls_utili.c	/^static void listmsg(sqlite3_stmt *stmt, void* data) {$/;"	f	file:
listpf	src/dls_utili.c	/^static void listpf(sqlite3_stmt *stmt, void* data) {$/;"	f	file:
longt	inc/handle.h	/^    float longt;      \/*GPS latitude of the gateway in degree (float, E is +)*\/$/;"	m	struct:gwinfo
lookup_appkey	src/db.c	/^static void lookup_appkey(sqlite3_stmt* stmt, void* data) {$/;"	f	file:
lookup_nwkskey	src/db.c	/^static void lookup_nwkskey(sqlite3_stmt* stmt, void* data) {$/;"	f	file:
lookupappkey	inc/db.h	/^	sqlite3_stmt* lookupappkey;$/;"	m	struct:context
lookupgweui	inc/db.h	/^	sqlite3_stmt* lookupgweui;$/;"	m	struct:context
lookupnwkskey	inc/db.h	/^	sqlite3_stmt* lookupnwkskey; $/;"	m	struct:context
lookupprofile	inc/db.h	/^	sqlite3_stmt* lookupprofile; $/;"	m	struct:context
lsnr	inc/handle.h	/^	float    lsnr;     \/*Lora SNR ratio in dB (signed float, 0.1 dB precision)*\/$/;"	m	struct:metadata
lw_t	inc/dls_utili.h	/^struct lw_t {$/;"	s
main	src/dls_utili.c	/^void main(int argc, char *argv[]) {$/;"	f
main	src/dragino_lorawan_server.c	/^int main(int argc, char **argv) {$/;"	f
malloc	src/parson.c	53;"	d	file:
memcpy1	src/utilities.c	/^void memcpy1( uint8_t *dst, const uint8_t *src, uint16_t size )$/;"	f
memcpyr	src/utilities.c	/^void memcpyr( uint8_t *dst, const uint8_t *src, uint16_t size )$/;"	f
memset1	src/utilities.c	/^void memset1( uint8_t *dst, uint8_t value, uint16_t size )$/;"	f
metadata	inc/handle.h	/^struct metadata {$/;"	s
mix_sub_columns	src/aes.c	/^  static void mix_sub_columns( uint_8t dt[N_BLOCK] )$/;"	f	file:
mm_data	src/aes.c	162;"	d	file:
modu	inc/handle.h	/^	char     modu[5];  \/* modulation:LORA or FSK*\/$/;"	m	struct:metadata
msg_down	inc/handle.h	/^    struct msg_down* msg_down;$/;"	m	struct:jsondata	typeref:struct:jsondata::msg_down
msg_down	inc/handle.h	/^struct msg_down {$/;"	s
msgdb	inc/db.h	/^    sqlite3* msgdb;$/;"	m	struct:context
msgdb	inc/dls_utili.h	/^    sqlite3 *msgdb;$/;"	m	struct:lw_t
mx_db	src/dragino_lorawan_server.c	/^static pthread_mutex_t mx_db = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
mx_gw_list	src/dragino_lorawan_server.c	/^static pthread_mutex_t mx_gw_list = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
mx_push	src/dragino_lorawan_server.c	/^static pthread_mutex_t mx_push = PTHREAD_MUTEX_INITIALIZER;	\/* control access to the push_data upstream measurements *\/$/;"	v	file:
names	src/parson.c	/^    char       **names;$/;"	m	struct:json_object_t	file:
nb_push_rcv	src/dragino_lorawan_server.c	/^static uint32_t nb_push_rcv = 0;	\/* count push_data packets received *\/$/;"	v	file:
next	inc/generic_list.h	/^	struct Node* next;$/;"	m	struct:Node	typeref:struct:Node::Node
next	src/handle.c	/^static uint32_t next = 1; $/;"	v	file:
next	src/utilities.c	/^static uint32_t next = 1;$/;"	v	file:
ns_msg_handle	src/handle.c	/^void ns_msg_handle(struct jsondata* result, struct metadata* meta, uint8_t* payload) {$/;"	f
null	src/parson.c	/^    int          null;$/;"	m	union:json_value_value	file:
num_bytes_in_utf8_sequence	src/parson.c	/^static int num_bytes_in_utf8_sequence(unsigned char c) {$/;"	f	file:
number	src/parson.c	/^    double       number;$/;"	m	union:json_value_value	file:
nwkskey	inc/dls_utili.h	/^    char nwkskey[33];$/;"	m	struct:lw_t
nwkskey	inc/handle.h	/^    uint8_t nwkskey[16];$/;"	m	struct:devinfo
nwkskey_hex	inc/handle.h	/^    uint8_t nwkskey_hex[33];$/;"	m	struct:devinfo
object	src/parson.c	/^    JSON_Object *object;$/;"	m	union:json_value_value	file:
parent	src/parson.c	/^    JSON_Value      *parent;$/;"	m	struct:json_value_t	file:
parse_array_value	src/parson.c	/^static JSON_Value * parse_array_value(const char **string, size_t nesting) {$/;"	f	file:
parse_boolean_value	src/parson.c	/^static JSON_Value * parse_boolean_value(const char **string) {$/;"	f	file:
parse_null_value	src/parson.c	/^static JSON_Value * parse_null_value(const char **string) {$/;"	f	file:
parse_number_value	src/parson.c	/^static JSON_Value * parse_number_value(const char **string) {$/;"	f	file:
parse_object_value	src/parson.c	/^static JSON_Value * parse_object_value(const char **string, size_t nesting) {$/;"	f	file:
parse_string_value	src/parson.c	/^static JSON_Value * parse_string_value(const char **string) {$/;"	f	file:
parse_utf16	src/parson.c	/^static int parse_utf16(const char **unprocessed, char **processed) {$/;"	f	file:
parse_utf16_hex	src/parson.c	/^static int parse_utf16_hex(const char *s, unsigned int *result) {$/;"	f	file:
parse_value	src/parson.c	/^static JSON_Value * parse_value(const char **string, size_t nesting) {$/;"	f	file:
parson_escape_slashes	src/parson.c	/^static int parson_escape_slashes = 0;$/;"	v	file:
parson_free	src/parson.c	/^static JSON_Free_Function parson_free = free;$/;"	v	file:
parson_malloc	src/parson.c	/^static JSON_Malloc_Function parson_malloc = malloc;$/;"	v	file:
parson_parson_h	inc/parson.h	25;"	d
parson_strdup	src/parson.c	/^static char * parson_strdup(const char *string) {$/;"	f	file:
parson_strndup	src/parson.c	/^static char * parson_strndup(const char *string, size_t n) {$/;"	f	file:
pfid	inc/dls_utili.h	/^    uint8_t pfid;$/;"	m	struct:lw_t
pfname	inc/dls_utili.h	/^    char pfname[32];$/;"	m	struct:lw_t
pkt	inc/handle.h	/^struct pkt {$/;"	s
pkt_info	inc/handle.h	/^struct pkt_info {$/;"	s
pkt_no	inc/handle.h	/^	int  pkt_no;\/*packet number*\/$/;"	m	struct:pkt_info
pkt_payload	inc/handle.h	/^	uint8_t pkt_payload[BUFF_SIZE - 12];\/*packet payload*\/$/;"	m	struct:pkt_info
plist	inc/generic_list.h	/^}linked_list, *plist;$/;"	t	typeref:struct:List
pnode	inc/generic_list.h	/^}list_node, *pnode;$/;"	t	typeref:struct:Node
process_string	src/parson.c	/^static char* process_string(const char *input, size_t len) {$/;"	f	file:
pull_port	src/dragino_lorawan_server.c	/^static char pull_port[16] = "1701";$/;"	v	file:
pull_timeout	src/handle.c	/^static struct timeval pull_timeout = {0, (PULL_TIMEOUT_MS * 1000)}; \/* non critical for throughput *\/$/;"	v	typeref:struct:timeval	file:
push_port	src/dragino_lorawan_server.c	/^static char push_port[16] = "1700";$/;"	v	file:
push_timeout_half	src/handle.c	/^static struct timeval push_timeout_half = {0, (PUSH_TIMEOUT_MS * 500)}; \/* cut in half, critical for throughput *\/$/;"	v	typeref:struct:timeval	file:
rand1	src/utilities.c	/^int32_t rand1( void )$/;"	f
randr	src/utilities.c	/^int32_t randr( int32_t min, int32_t max )$/;"	f
read_file	src/parson.c	/^static char * read_file(const char * filename) {$/;"	f	file:
remove_comments	src/parson.c	/^static void remove_comments(char *string, const char *start_token, const char *end_token) {$/;"	f	file:
return_type	inc/aes.h	/^typedef uint_8t return_type;$/;"	t
revercpy	src/handle.c	/^void revercpy( uint8_t *dst, const uint8_t *src, int size) {$/;"	f
rfch	inc/handle.h	/^	uint8_t  rfch;     \/*Concentrator "RF chain" used for RX (unsigned integer)*\/$/;"	m	struct:metadata
rijndael	inc/cmac.h	/^            aes_context    rijndael;$/;"	m	struct:_AES_CMAC_CTX
rnd	inc/aes.h	/^    uint_8t rnd;$/;"	m	struct:__anon1
rssi	inc/handle.h	/^	float    rssi;	   \/*RSSI in dBm (signed integer, 1 dB precision)*\/$/;"	m	struct:metadata
rx2dr	inc/dls_utili.h	/^    uint8_t rx2dr;$/;"	m	struct:lw_t
rx2freq	inc/dls_utili.h	/^    float rx2freq;$/;"	m	struct:lw_t
rxfw	inc/handle.h	/^    uint32_t rxfw;    \/*Number of radio packets forwarded (unsigned integer)*\/$/;"	m	struct:gwinfo
rxnb	inc/handle.h	/^    uint32_t rxnb;    \/*Number of radio packets received (unsigned integer)*\/$/;"	m	struct:gwinfo
rxok	inc/handle.h	/^    uint32_t rxok;    \/*Number of radio packets received with a valid PHY CRC*\/$/;"	m	struct:gwinfo
sBlock	src/LoRaMacCrypto.c	/^static uint8_t sBlock[] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,$/;"	v	file:
sCtrlBits	src/handle.c	/^    struct sCtrlBits$/;"	s	union:uLoRaMacFrameCtrl	file:
sDLSBits	src/handle.c	/^	struct sDLSBits{$/;"	s	union:uLoRaMacDLSettings	file:
sHdrBits	src/handle.c	/^    struct sHdrBits$/;"	s	union:uLoRaMacHeader	file:
sRxDBits	src/handle.c	/^	struct sRxDBits{$/;"	s	union:uLoRaMacRxDelay	file:
s_box	src/aes.c	207;"	d	file:
s_box	src/aes.c	290;"	d	file:
sb_data	src/aes.c	94;"	d	file:
sbox	src/aes.c	/^static const uint_8t sbox[256]  =  sb_data(f1);$/;"	v	file:
serialize_msg_to_gw	src/handle.c	/^void serialize_msg_to_gw(const char* data, int size, char* gweui_hex, char* json_data, uint32_t tmst, int delay) {$/;"	f
set_timer	src/handle.c	/^void set_timer(int sec,int msec) {$/;"	f
shift_sub_rows	src/aes.c	/^static void shift_sub_rows( uint_8t st[N_BLOCK] )$/;"	f	file:
show_help	src/dls_utili.c	/^static void show_help() {$/;"	f	file:
signal_handle	src/dragino_lorawan_server.c	/^void signal_handle(int signo) {$/;"	f
size	inc/handle.h	/^	uint16_t size;     \/*RF packet payload size in bytes (unsigned integer)*\/$/;"	m	struct:metadata
skip_quotes	src/parson.c	/^static JSON_Status skip_quotes(const char **string) {$/;"	f	file:
sockfd_pull	src/dragino_lorawan_server.c	/^static int sockfd_pull;			\/*socket for downstream to gateway *\/$/;"	v	file:
sockfd_push	src/dragino_lorawan_server.c	/^static int sockfd_push;			\/*socket for upstream from gateway *\/$/;"	v	file:
sql_debug	src/db.c	/^static void sql_debug(sqlite3_stmt* stmt) { $/;"	f	file:
sql_debug	src/dls_utili.c	/^static void sql_debug(sqlite3_stmt* stmt) { $/;"	f	file:
srand1	src/utilities.c	/^void srand1( uint32_t seed )$/;"	f
sscanf	src/parson.c	40;"	d	file:
stat	inc/handle.h	/^	uint8_t  stat;     \/* packet status*\/$/;"	m	struct:metadata
stmt	inc/dls_utili.h	/^    sqlite3_stmt *stmt;$/;"	m	struct:lw_t
str2hex	src/handle.c	/^void str2hex(uint8_t* dest, char* src, int len) {$/;"	f
string	src/parson.c	/^    char        *string;$/;"	m	union:json_value_value	file:
tail	inc/generic_list.h	/^	struct Node* tail;$/;"	m	struct:List	typeref:struct:List::Node
tcp_bind	src/handle.c	/^void tcp_bind(const char* servaddr, const char* port, int* listenfd) {$/;"	f
tcp_connect	src/handle.c	/^void tcp_connect(const char* servaddr, const char* port, int* sockfd, bool* exit_sig) {$/;"	f
thread_down	src/dragino_lorawan_server.c	/^void thread_down(void) {$/;"	f
thread_up_handle	src/dragino_lorawan_server.c	/^void thread_up_handle(void *pkt_info) {$/;"	f
time	inc/handle.h	/^	char     time[28]; \/*UTC time of pkt RX, us precision, ISO 8601 'compact' format*\/$/;"	m	struct:metadata
time	inc/handle.h	/^    char time[32];    \/*UTC 'system' time of the gateway, ISO 8601 'expanded' format*\/$/;"	m	struct:gwinfo
tmst	inc/handle.h	/^	uint32_t tmst;     \/*raw time stamp*\/$/;"	m	struct:metadata
tmst_g	src/dragino_lorawan_server.c	/^static uint32_t tmst_g;$/;"	v	file:
to	inc/handle.h	/^	int to; \/* which server to send to 1.app 2.nc 3.both 4.err 5.ignore *\/$/;"	m	struct:jsondata
tohex	src/dls_utili.c	/^static char *tohex(char *dst, const char *src, uint8_t len) {$/;"	f	file:
txnb	inc/handle.h	/^    uint32_t txnb;    \/*Number of packets emitted (unsigned integer)*\/$/;"	m	struct:gwinfo
type	src/parson.c	/^    JSON_Value_Type  type;$/;"	m	struct:json_value_t	file:
uLoRaMacDLSettings	src/handle.c	/^typedef union uLoRaMacDLSettings{$/;"	u	file:
uLoRaMacFrameCtrl	src/handle.c	/^typedef union uLoRaMacFrameCtrl {$/;"	u	file:
uLoRaMacHeader	src/handle.c	/^typedef union uLoRaMacHeader {$/;"	u	file:
uLoRaMacRxDelay	src/handle.c	/^typedef union uLoRaMacRxDelay{$/;"	u	file:
udp_bind	src/handle.c	/^void udp_bind(const char* servaddr, const char* port, int* sockfd, int type) {$/;"	f
uint_32t	src/aes.c	/^  typedef unsigned uint_32t;  \/\/ Edited by Semtech - David Roe 1 Dec 13$/;"	t	file:
uint_8t	inc/aes.h	/^typedef unsigned char uint_8t;$/;"	t
update_decrypt_key_128	src/aes.c	/^static void update_decrypt_key_128( uint_8t k[N_BLOCK], uint_8t *rc )$/;"	f	file:
update_decrypt_key_256	src/aes.c	/^static void update_decrypt_key_256( uint_8t k[2 * N_BLOCK], uint_8t *rc )$/;"	f	file:
update_encrypt_key_128	src/aes.c	/^static void update_encrypt_key_128( uint_8t k[N_BLOCK], uint_8t *rc )$/;"	f	file:
update_encrypt_key_256	src/aes.c	/^static void update_encrypt_key_256( uint_8t k[2 * N_BLOCK], uint_8t *rc )$/;"	f	file:
updatedevinfo	inc/db.h	/^	sqlite3_stmt* updatedevinfo; $/;"	m	struct:context
updategwinfo	inc/db.h	/^	sqlite3_stmt* updategwinfo; $/;"	m	struct:context
value	src/parson.c	/^    JSON_Value_Value value;$/;"	m	struct:json_value_t	file:
values	src/parson.c	/^    JSON_Value **values;$/;"	m	struct:json_object_t	file:
verify_utf8_sequence	src/parson.c	/^static int verify_utf8_sequence(const unsigned char *string, int *len) {$/;"	f	file:
wrapping_value	src/parson.c	/^    JSON_Value  *wrapping_value;$/;"	m	struct:json_array_t	file:
wrapping_value	src/parson.c	/^    JSON_Value  *wrapping_value;$/;"	m	struct:json_object_t	file:
xor_block	src/aes.c	/^static void xor_block( void *d, const void *s )$/;"	f	file:
