!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AES_CMAC_CTX	inc/cmac.h	/^    } AES_CMAC_CTX;$/;"	t	typeref:struct:_AES_CMAC_CTX
AES_CMAC_DIGEST_LENGTH	inc/cmac.h	43;"	d
AES_CMAC_Final	src/cmac.c	/^void AES_CMAC_Final(uint8_t digest[AES_CMAC_DIGEST_LENGTH], AES_CMAC_CTX *ctx)$/;"	f
AES_CMAC_Init	src/cmac.c	/^void AES_CMAC_Init(AES_CMAC_CTX *ctx)$/;"	f
AES_CMAC_KEY_LENGTH	inc/cmac.h	42;"	d
AES_CMAC_SetKey	src/cmac.c	/^void AES_CMAC_SetKey(AES_CMAC_CTX *ctx, const uint8_t key[AES_CMAC_KEY_LENGTH])$/;"	f
AES_CMAC_Update	src/cmac.c	/^void AES_CMAC_Update(AES_CMAC_CTX *ctx, const uint8_t *data, uint32_t len)$/;"	f
AES_DEC_PREKEYED	inc/aes.h	38;"	d
AES_ENC_PREKEYED	inc/aes.h	35;"	d
AES_H	inc/aes.h	32;"	d
APPEND_INDENT	src/parson.c	720;"	d	file:
APPEND_INDENT	src/parson.c	881;"	d	file:
APPEND_STRING	src/parson.c	715;"	d	file:
APPEND_STRING	src/parson.c	880;"	d	file:
APPLICATION_SERVER	inc/handle.h	95;"	d
APP_NAME	Makefile	/^APP_NAME:=ns$/;"	m
APP_PORT_DOWN	inc/handle.h	64;"	d
APP_PORT_UP	inc/handle.h	63;"	d
APP_SERV_ADDR	inc/handle.h	57;"	d
ARRAY_MAX_CAPACITY	src/parson.c	36;"	d	file:
ARRAY_SIZE	src/base64.c	29;"	d	file:
ASOBJECTS	Makefile	/^ASOBJECTS:=obj\/as.o obj\/base64.o obj\/parson.o obj\/aes.o obj\/cmac.o obj\/utilities.o obj\/LoRaMacCrypto.o obj\/generic_list.o obj\/db.o obj\/handle.o$/;"	m
AS_SEND_INTERVAL_S	inc/handle.h	77;"	d
Ack	src/handle.c	/^        uint8_t Ack             : 1;$/;"	m	struct:uLoRaMacFrameCtrl::sCtrlBits	file:
Adr	src/handle.c	/^        uint8_t Adr             : 1;$/;"	m	struct:uLoRaMacFrameCtrl::sCtrlBits	file:
AdrAckReq	src/handle.c	/^        uint8_t AdrAckReq       : 1;$/;"	m	struct:uLoRaMacFrameCtrl::sCtrlBits	file:
AesCmacCtx	src/LoRaMacCrypto.c	/^static AES_CMAC_CTX AesCmacCtx[1];$/;"	v	file:
AesContext	src/LoRaMacCrypto.c	/^static aes_context AesContext;$/;"	v	file:
BOTH	inc/handle.h	97;"	d
BPOLY	src/aes.c	74;"	d	file:
BUFF_SIZE	inc/handle.h	87;"	d
Bits	src/handle.c	/^	}Bits;$/;"	m	union:uLoRaMacDLSettings	typeref:struct:uLoRaMacDLSettings::sDLSBits	file:
Bits	src/handle.c	/^	}Bits;$/;"	m	union:uLoRaMacRxDelay	typeref:struct:uLoRaMacRxDelay::sRxDBits	file:
Bits	src/handle.c	/^	}Bits;$/;"	m	union:uMacCommandADRStatus	typeref:struct:uMacCommandADRStatus::sADRStatus	file:
Bits	src/handle.c	/^	}Bits;$/;"	m	union:uMacCommandChannelStatus	typeref:struct:uMacCommandChannelStatus::sChannelStatus	file:
Bits	src/handle.c	/^	}Bits;$/;"	m	union:uMacCommandDLSettings	typeref:struct:uMacCommandDLSettings::sDLSettings	file:
Bits	src/handle.c	/^	}Bits;$/;"	m	union:uMacCommandDataRateTxPower	typeref:struct:uMacCommandDataRateTxPower::sDataRateTxPower	file:
Bits	src/handle.c	/^	}Bits;$/;"	m	union:uMacCommandDrRange	typeref:struct:uMacCommandDrRange::sDrRange	file:
Bits	src/handle.c	/^	}Bits;$/;"	m	union:uMacCommandMargin	typeref:struct:uMacCommandMargin::sMargin	file:
Bits	src/handle.c	/^	}Bits;$/;"	m	union:uMacCommandRXStatus	typeref:struct:uMacCommandRXStatus::sRXStatus	file:
Bits	src/handle.c	/^	}Bits;$/;"	m	union:uMacCommandRedundancy	typeref:struct:uMacCommandRedundancy::sRedundancy	file:
Bits	src/handle.c	/^	}Bits;$/;"	m	union:uMacCommandSettings	typeref:struct:uMacCommandSettings::sSettings	file:
Bits	src/handle.c	/^    }Bits;$/;"	m	union:uLoRaMacFrameCtrl	typeref:struct:uLoRaMacFrameCtrl::sCtrlBits	file:
Bits	src/handle.c	/^    }Bits;$/;"	m	union:uLoRaMacHeader	typeref:struct:uLoRaMacHeader::sHdrBits	file:
CFLAGS	Makefile	/^CFLAGS := -Iinc$/;"	m
CLASS_A	inc/handle.h	111;"	d
CLASS_B	inc/handle.h	112;"	d
CLASS_C	inc/handle.h	113;"	d
CMD_FRAME_DOWN_MAX	inc/handle.h	91;"	d
CMD_UP_MAX	inc/handle.h	104;"	d
CONNFD_NUM_MAX	inc/handle.h	54;"	d
CRIT	src/base64.c	30;"	d	file:
ChannelAck	src/handle.c	/^		uint8_t ChannelAck     :1;$/;"	m	struct:uMacCommandRXStatus::sRXStatus	file:
ChannelFreqAck	src/handle.c	/^		uint8_t ChannelFreqAck      :1;$/;"	m	struct:uMacCommandChannelStatus::sChannelStatus	file:
ChannelMaskAck	src/handle.c	/^		uint8_t ChannelMaskAck :1;$/;"	m	struct:uMacCommandADRStatus::sADRStatus	file:
DB_SQLITE3_H_	inc/db.h	10;"	d
DEBUG	src/base64.c	33;"	d	file:
DEBUG_BEACON	inc/trace.h	24;"	d
DEBUG_ERROR	inc/trace.h	29;"	d
DEBUG_INFO	inc/trace.h	26;"	d
DEBUG_JIT	inc/trace.h	21;"	d
DEBUG_JIT_ERROR	inc/trace.h	22;"	d
DEBUG_LOG	inc/trace.h	25;"	d
DEBUG_PKT_FWD	inc/trace.h	20;"	d
DEBUG_PPM	inc/trace.h	27;"	d
DEBUG_TIMERSYNC	inc/trace.h	23;"	d
DEBUG_WARNING	inc/trace.h	28;"	d
DEFALUT_DEVEUI	src/handle.c	21;"	d	file:
DEFAULT_APPEUI	src/handle.c	20;"	d	file:
DOUBLE_SERIALIZATION_FORMAT	src/parson.c	39;"	d	file:
DOWN	src/handle.c	25;"	d	file:
DPOLY	src/aes.c	75;"	d	file:
DataRate	src/handle.c	/^		uint8_t DataRate            :4;$/;"	m	struct:uMacCommandDataRateTxPower::sDataRateTxPower	file:
DatarateAck	src/handle.c	/^		uint8_t DatarateAck    :1;$/;"	m	struct:uMacCommandADRStatus::sADRStatus	file:
DatarateRangeAck	src/handle.c	/^		uint8_t DatarateRangeAck    :1;$/;"	m	struct:uMacCommandChannelStatus::sChannelStatus	file:
Del	src/handle.c	/^		uint8_t Del              : 4;$/;"	m	struct:uLoRaMacRxDelay::sRxDBits	file:
Del	src/handle.c	/^		uint8_t Del           :4;$/;"	m	struct:uMacCommandSettings::sSettings	file:
ERR	inc/handle.h	98;"	d
FAILED	inc/db.h	18;"	d
FAILED	inc/handle.h	115;"	d
FOptsLen	src/handle.c	/^        uint8_t FOptsLen        : 4;$/;"	m	struct:uLoRaMacFrameCtrl::sCtrlBits	file:
FPending	src/handle.c	/^        uint8_t FPending        : 1;$/;"	m	struct:uLoRaMacFrameCtrl::sCtrlBits	file:
FRAME_LEN	inc/handle.h	55;"	d
FRAME_TYPE_DATA_CONFIRMED_DOWN	src/handle.c	/^    FRAME_TYPE_DATA_CONFIRMED_DOWN   = 0x05,$/;"	e	enum:eLoRaMacFrameType	file:
FRAME_TYPE_DATA_CONFIRMED_UP	src/handle.c	/^    FRAME_TYPE_DATA_CONFIRMED_UP     = 0x04,$/;"	e	enum:eLoRaMacFrameType	file:
FRAME_TYPE_DATA_UNCONFIRMED_DOWN	src/handle.c	/^    FRAME_TYPE_DATA_UNCONFIRMED_DOWN = 0x03,$/;"	e	enum:eLoRaMacFrameType	file:
FRAME_TYPE_DATA_UNCONFIRMED_UP	src/handle.c	/^    FRAME_TYPE_DATA_UNCONFIRMED_UP   = 0x02,$/;"	e	enum:eLoRaMacFrameType	file:
FRAME_TYPE_JOIN_ACCEPT	src/handle.c	/^    FRAME_TYPE_JOIN_ACCEPT           = 0x01,$/;"	e	enum:eLoRaMacFrameType	file:
FRAME_TYPE_JOIN_REQ	src/handle.c	/^    FRAME_TYPE_JOIN_REQ              = 0x00,$/;"	e	enum:eLoRaMacFrameType	file:
FRAME_TYPE_PROPRIETARY	src/handle.c	/^    FRAME_TYPE_PROPRIETARY           = 0x07,$/;"	e	enum:eLoRaMacFrameType	file:
FRAME_TYPE_RFU	src/handle.c	/^    FRAME_TYPE_RFU                   = 0x06,$/;"	e	enum:eLoRaMacFrameType	file:
GENERIC_LIST_H_	inc/generic_list.h	7;"	d
GW_SERV_ADDR	inc/handle.h	58;"	d
HANDLE_H_	inc/handle.h	18;"	d
HAVE_UINT_32T	src/aes.c	50;"	d	file:
IGNORE	inc/handle.h	99;"	d
IS_CONT	src/parson.c	52;"	d	file:
JOIN_ACCEPT_DELAY	inc/handle.h	107;"	d
JOIN_ACC_SIZE	src/handle.c	27;"	d	file:
JSONArray	inc/parson.h	/^    JSONArray   = 5,$/;"	e	enum:json_value_type
JSONBoolean	inc/parson.h	/^    JSONBoolean = 6$/;"	e	enum:json_value_type
JSONError	inc/parson.h	/^    JSONError   = -1,$/;"	e	enum:json_value_type
JSONFailure	inc/parson.h	/^    JSONFailure = -1$/;"	e	enum:json_result_t
JSONNull	inc/parson.h	/^    JSONNull    = 1,$/;"	e	enum:json_value_type
JSONNumber	inc/parson.h	/^    JSONNumber  = 3,$/;"	e	enum:json_value_type
JSONObject	inc/parson.h	/^    JSONObject  = 4,$/;"	e	enum:json_value_type
JSONString	inc/parson.h	/^    JSONString  = 2,$/;"	e	enum:json_value_type
JSONSuccess	inc/parson.h	/^    JSONSuccess = 0,$/;"	e	enum:json_result_t
JSON_Array	inc/parson.h	/^typedef struct json_array_t  JSON_Array;$/;"	t	typeref:struct:json_array_t
JSON_Free_Function	inc/parson.h	/^typedef void   (*JSON_Free_Function)(void *);$/;"	t
JSON_MAX	inc/handle.h	93;"	d
JSON_Malloc_Function	inc/parson.h	/^typedef void * (*JSON_Malloc_Function)(size_t);$/;"	t
JSON_Object	inc/parson.h	/^typedef struct json_object_t JSON_Object;$/;"	t	typeref:struct:json_object_t
JSON_Status	inc/parson.h	/^typedef int JSON_Status;$/;"	t
JSON_Value	inc/parson.h	/^typedef struct json_value_t  JSON_Value;$/;"	t	typeref:struct:json_value_t
JSON_Value_Type	inc/parson.h	/^typedef int JSON_Value_Type;$/;"	t
JSON_Value_Value	src/parson.c	/^} JSON_Value_Value;$/;"	t	typeref:union:json_value_value	file:
LIBS	Makefile	/^LIBS := -lsqlite3 -lpthread$/;"	m
LISTENQ	inc/handle.h	53;"	d
LORAMAC_FRAME_MAXPAYLOAD	inc/handle.h	89;"	d
LORAMAC_MIC_BLOCK_B0_SIZE	src/LoRaMacCrypto.c	32;"	d	file:
LSHIFT	src/cmac.c	42;"	d	file:
List	inc/generic_list.h	/^typedef struct List{$/;"	s
LoRaMacComputeMic	src/LoRaMacCrypto.c	/^void LoRaMacComputeMic( const uint8_t *buffer, uint16_t size, const uint8_t *key, uint32_t address, uint8_t dir, uint32_t sequenceCounter, uint32_t *mic )$/;"	f
LoRaMacDLSettings_t	src/handle.c	/^}LoRaMacDLSettings_t;$/;"	t	typeref:union:uLoRaMacDLSettings	file:
LoRaMacFrameCtrl_t	src/handle.c	/^}LoRaMacFrameCtrl_t;$/;"	t	typeref:union:uLoRaMacFrameCtrl	file:
LoRaMacFrameType_t	src/handle.c	/^}LoRaMacFrameType_t;$/;"	t	typeref:enum:eLoRaMacFrameType	file:
LoRaMacHeader_t	src/handle.c	/^}LoRaMacHeader_t;$/;"	t	typeref:union:uLoRaMacHeader	file:
LoRaMacJoinComputeMic	src/LoRaMacCrypto.c	/^void LoRaMacJoinComputeMic( const uint8_t *buffer, uint16_t size, const uint8_t *key, uint32_t *mic )$/;"	f
LoRaMacJoinComputeSKeys	src/LoRaMacCrypto.c	/^void LoRaMacJoinComputeSKeys( const uint8_t *key, const uint8_t *appNonce, uint16_t devNonce, uint8_t *nwkSKey, uint8_t *appSKey )$/;"	f
LoRaMacJoinDecrypt	src/LoRaMacCrypto.c	/^void LoRaMacJoinDecrypt( const uint8_t *buffer, uint16_t size, const uint8_t *key, uint8_t *decBuffer )$/;"	f
LoRaMacJoinEncrypt	src/LoRaMacCrypto.c	/^void LoRaMacJoinEncrypt( const uint8_t *buffer, uint16_t size, const uint8_t *key, uint8_t *encBuffer ){$/;"	f
LoRaMacMoteCmd_t	inc/handle.h	/^}LoRaMacMoteCmd_t;$/;"	t	typeref:enum:eLoRaMacMoteCmd
LoRaMacPayloadDecrypt	src/LoRaMacCrypto.c	/^void LoRaMacPayloadDecrypt( const uint8_t *buffer, uint16_t size, const uint8_t *key, uint32_t address, uint8_t dir, uint32_t sequenceCounter, uint8_t *decBuffer )$/;"	f
LoRaMacPayloadEncrypt	src/LoRaMacCrypto.c	/^void LoRaMacPayloadEncrypt( const uint8_t *buffer, uint16_t size, const uint8_t *key, uint32_t address, uint8_t dir, uint32_t sequenceCounter, uint8_t *encBuffer )$/;"	f
LoRaMacRxDelay_t	src/handle.c	/^}LoRaMacRxDelay_t;$/;"	t	typeref:union:uLoRaMacRxDelay	file:
LoRaMacSrvCmd_t	inc/handle.h	/^}LoRaMacSrvCmd_t;$/;"	t	typeref:enum:eLoRaMacSrvCmd
MAX	inc/utilities.h	35;"	d
MAX	src/parson.c	44;"	d	file:
MAX_NB_B64	inc/handle.h	101;"	d
MAX_NESTING	src/parson.c	38;"	d	file:
MIN	inc/utilities.h	26;"	d
MOTE_MAC_DEV_STATUS_ANS	inc/handle.h	/^    MOTE_MAC_DEV_STATUS_ANS          = 0x06,$/;"	e	enum:eLoRaMacMoteCmd
MOTE_MAC_DUTY_CYCLE_ANS	inc/handle.h	/^    MOTE_MAC_DUTY_CYCLE_ANS          = 0x04,$/;"	e	enum:eLoRaMacMoteCmd
MOTE_MAC_LINK_ADR_ANS	inc/handle.h	/^    MOTE_MAC_LINK_ADR_ANS            = 0x03,$/;"	e	enum:eLoRaMacMoteCmd
MOTE_MAC_LINK_CHECK_REQ	inc/handle.h	/^    MOTE_MAC_LINK_CHECK_REQ          = 0x02,$/;"	e	enum:eLoRaMacMoteCmd
MOTE_MAC_NEW_CHANNEL_ANS	inc/handle.h	/^    MOTE_MAC_NEW_CHANNEL_ANS         = 0x07,$/;"	e	enum:eLoRaMacMoteCmd
MOTE_MAC_RX_PARAM_SETUP_ANS	inc/handle.h	/^    MOTE_MAC_RX_PARAM_SETUP_ANS      = 0x05,$/;"	e	enum:eLoRaMacMoteCmd
MOTE_MAC_RX_TIMING_SETUP_ANS	inc/handle.h	/^    MOTE_MAC_RX_TIMING_SETUP_ANS     = 0x08,$/;"	e	enum:eLoRaMacMoteCmd
MSG	inc/handle.h	85;"	d
MSG	inc/trace.h	31;"	d
MSG_DEBUG	inc/trace.h	32;"	d
MSG_INFO	inc/trace.h	38;"	d
MType	src/handle.c	/^        uint8_t MType           : 3;$/;"	m	struct:uLoRaMacHeader::sHdrBits	file:
M_last	inc/cmac.h	/^            uint8_t        M_last[16];$/;"	m	struct:_AES_CMAC_CTX
M_n	inc/cmac.h	/^            uint32_t       M_n;$/;"	m	struct:_AES_CMAC_CTX
MacCmdADRStatus_t	src/handle.c	/^}MacCmdADRStatus_t;$/;"	t	typeref:union:uMacCommandADRStatus	file:
MacCmdChannelStatus_t	src/handle.c	/^}MacCmdChannelStatus_t;$/;"	t	typeref:union:uMacCommandChannelStatus	file:
MacCmdDLSettings_t	src/handle.c	/^}MacCmdDLSettings_t;$/;"	t	typeref:union:uMacCommandDLSettings	file:
MacCmdDataRateTxPower_t	src/handle.c	/^}MacCmdDataRateTxPower_t;$/;"	t	typeref:union:uMacCommandDataRateTxPower	file:
MacCmdDrRange_t	src/handle.c	/^}MacCmdDrRange_t;$/;"	t	typeref:union:uMacCommandDrRange	file:
MacCmdMargin_t	src/handle.c	/^}MacCmdMargin_t;$/;"	t	typeref:union:uMacCommandMargin	file:
MacCmdRXStatus_t	src/handle.c	/^}MacCmdRXStatus_t;$/;"	t	typeref:union:uMacCommandRXStatus	file:
MacCmdRedundancy_t	src/handle.c	/^}MacCmdRedundancy_t;$/;"	t	typeref:union:uMacCommandRedundancy	file:
MacCmdSettings_t	src/handle.c	/^}MacCmdSettings_t;$/;"	t	typeref:union:uMacCommandSettings	file:
Major	src/handle.c	/^        uint8_t Major           : 2;$/;"	m	struct:uLoRaMacHeader::sHdrBits	file:
Margin	src/handle.c	/^		uint8_t Margin  :6;$/;"	m	struct:uMacCommandMargin::sMargin	file:
MaxDR	src/handle.c	/^		uint8_t MaxDR         :4;$/;"	m	struct:uMacCommandDrRange::sDrRange	file:
Mic	src/LoRaMacCrypto.c	/^static uint8_t Mic[16];$/;"	v	file:
MicBlockB0	src/LoRaMacCrypto.c	/^static uint8_t MicBlockB0[] = { 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,$/;"	v	file:
MinDR	src/handle.c	/^		uint8_t MinDR         :4;$/;"	m	struct:uMacCommandDrRange::sDrRange	file:
NB_PKT_MAX	inc/handle.h	86;"	d
NCOBJECTS	Makefile	/^NCOBJECTS:=obj\/nc.o obj\/base64.o obj\/parson.o obj\/aes.o obj\/cmac.o obj\/utilities.o obj\/LoRaMacCrypto.o obj\/generic_list.o obj\/db.o obj\/handle.o$/;"	m
NC_PORT_DOWN	inc/handle.h	66;"	d
NC_PORT_UP	inc/handle.h	65;"	d
NC_SERV_ADDR	inc/handle.h	59;"	d
NETWORK_CONTROLLER	inc/handle.h	96;"	d
NET_PORT_PULL	inc/handle.h	62;"	d
NET_PORT_PUSH	inc/handle.h	61;"	d
NET_SERV_ADDR	inc/handle.h	60;"	d
NO_DELAY	inc/handle.h	106;"	d
NSOBJECTS	Makefile	/^NSOBJECTS:=obj\/$(APP_NAME).o obj\/base64.o obj\/parson.o obj\/aes.o obj\/cmac.o obj\/utilities.o obj\/LoRaMacCrypto.o obj\/generic_list.o obj\/db.o obj\/handle.o$/;"	m
N_BLOCK	inc/aes.h	55;"	d
N_COL	inc/aes.h	54;"	d
N_MAX_ROUNDS	inc/aes.h	56;"	d
N_ROW	inc/aes.h	53;"	d
NbRep	src/handle.c	/^		uint8_t NbRep               :4;$/;"	m	struct:uMacCommandRedundancy::sRedundancy	file:
Nibble2HexChar	src/utilities.c	/^int8_t Nibble2HexChar( uint8_t a )$/;"	f
Node	inc/generic_list.h	/^typedef struct Node{$/;"	s
OBJECT_MAX_CAPACITY	src/parson.c	37;"	d	file:
PKT_PULL_ACK	inc/handle.h	72;"	d
PKT_PULL_DATA	inc/handle.h	70;"	d
PKT_PULL_RESP	inc/handle.h	71;"	d
PKT_PUSH_ACK	inc/handle.h	69;"	d
PKT_PUSH_DATA	inc/handle.h	68;"	d
POW2	inc/utilities.h	43;"	d
PowerAck	src/handle.c	/^		uint8_t PowerAck       :1;$/;"	m	struct:uMacCommandADRStatus::sADRStatus	file:
RAND_LOCAL_MAX	src/utilities.c	27;"	d	file:
RANGE	inc/handle.h	102;"	d
RECV_DELAY	inc/handle.h	109;"	d
RFU	src/handle.c	/^		uint8_t RFU                 :1;$/;"	m	struct:uMacCommandDLSettings::sDLSettings	file:
RFU	src/handle.c	/^		uint8_t RFU                 :1;$/;"	m	struct:uMacCommandRedundancy::sRedundancy	file:
RFU	src/handle.c	/^		uint8_t RFU                 :6;$/;"	m	struct:uMacCommandChannelStatus::sChannelStatus	file:
RFU	src/handle.c	/^		uint8_t RFU              : 1;$/;"	m	struct:uLoRaMacDLSettings::sDLSBits	file:
RFU	src/handle.c	/^		uint8_t RFU              : 4;$/;"	m	struct:uLoRaMacRxDelay::sRxDBits	file:
RFU	src/handle.c	/^		uint8_t RFU            :5;$/;"	m	struct:uMacCommandADRStatus::sADRStatus	file:
RFU	src/handle.c	/^		uint8_t RFU            :5;$/;"	m	struct:uMacCommandRXStatus::sRXStatus	file:
RFU	src/handle.c	/^		uint8_t RFU           :4;$/;"	m	struct:uMacCommandSettings::sSettings	file:
RFU	src/handle.c	/^		uint8_t RFU     :2;$/;"	m	struct:uMacCommandMargin::sMargin	file:
RFU	src/handle.c	/^        uint8_t RFU             : 3;$/;"	m	struct:uLoRaMacHeader::sHdrBits	file:
RX1DRoffset	src/handle.c	/^		uint8_t RX1DRoffset         :3;$/;"	m	struct:uMacCommandDLSettings::sDLSettings	file:
RX1DRoffset	src/handle.c	/^		uint8_t RX1DRoffset      : 3;$/;"	m	struct:uLoRaMacDLSettings::sDLSBits	file:
RX1DRoffsetAck	src/handle.c	/^		uint8_t RX1DRoffsetAck :1;$/;"	m	struct:uMacCommandRXStatus::sRXStatus	file:
RX2DataRate	src/handle.c	/^		uint8_t RX2DataRate         :4;$/;"	m	struct:uMacCommandDLSettings::sDLSettings	file:
RX2DataRate	src/handle.c	/^		uint8_t RX2DataRate      : 4;$/;"	m	struct:uLoRaMacDLSettings::sDLSBits	file:
RX2DatarateAck	src/handle.c	/^		uint8_t RX2DatarateAck :1;$/;"	m	struct:uMacCommandRXStatus::sRXStatus	file:
SEND_INTERVAL_MS	inc/handle.h	78;"	d
SEND_INTERVAL_S	inc/handle.h	76;"	d
SIZEOF_TOKEN	src/parson.c	41;"	d	file:
SKIP_CHAR	src/parson.c	42;"	d	file:
SKIP_WHITESPACES	src/parson.c	43;"	d	file:
SOCKET_INTERVAL_MS	inc/handle.h	75;"	d
SOCKET_INTERVAL_S	inc/handle.h	74;"	d
SRV_MAC_DEV_STATUS_REQ	inc/handle.h	/^    SRV_MAC_DEV_STATUS_REQ           = 0x06,$/;"	e	enum:eLoRaMacSrvCmd
SRV_MAC_DUTY_CYCLE_REQ	inc/handle.h	/^    SRV_MAC_DUTY_CYCLE_REQ           = 0x04,$/;"	e	enum:eLoRaMacSrvCmd
SRV_MAC_LINK_ADR_REQ	inc/handle.h	/^    SRV_MAC_LINK_ADR_REQ             = 0x03,$/;"	e	enum:eLoRaMacSrvCmd
SRV_MAC_LINK_CHECK_ANS	inc/handle.h	/^    SRV_MAC_LINK_CHECK_ANS           = 0x02,$/;"	e	enum:eLoRaMacSrvCmd
SRV_MAC_NEW_CHANNEL_REQ	inc/handle.h	/^    SRV_MAC_NEW_CHANNEL_REQ          = 0x07,$/;"	e	enum:eLoRaMacSrvCmd
SRV_MAC_RX_PARAM_SETUP_REQ	inc/handle.h	/^    SRV_MAC_RX_PARAM_SETUP_REQ       = 0x05,$/;"	e	enum:eLoRaMacSrvCmd
SRV_MAC_RX_TIMING_SETUP_REQ	inc/handle.h	/^    SRV_MAC_RX_TIMING_SETUP_REQ      = 0x08,$/;"	e	enum:eLoRaMacSrvCmd
STARTING_CAPACITY	src/parson.c	35;"	d	file:
STR	inc/handle.h	84;"	d
STRINGIFY	inc/handle.h	83;"	d
SUCCESS	inc/db.h	19;"	d
SUCCESS	inc/handle.h	116;"	d
TxPower	src/handle.c	/^		uint8_t TxPower             :4;$/;"	m	struct:uMacCommandDataRateTxPower::sDataRateTxPower	file:
UP	src/handle.c	24;"	d	file:
USE_TABLES	src/aes.c	55;"	d	file:
VERSION	inc/handle.h	81;"	d
VERSION_1	src/aes.c	62;"	d	file:
Value	src/handle.c	/^	uint8_t Value;$/;"	m	union:uLoRaMacDLSettings	file:
Value	src/handle.c	/^	uint8_t Value;$/;"	m	union:uLoRaMacRxDelay	file:
Value	src/handle.c	/^	uint8_t Value;$/;"	m	union:uMacCommandADRStatus	file:
Value	src/handle.c	/^	uint8_t Value;$/;"	m	union:uMacCommandChannelStatus	file:
Value	src/handle.c	/^	uint8_t Value;$/;"	m	union:uMacCommandDLSettings	file:
Value	src/handle.c	/^	uint8_t Value;$/;"	m	union:uMacCommandDataRateTxPower	file:
Value	src/handle.c	/^	uint8_t Value;$/;"	m	union:uMacCommandDrRange	file:
Value	src/handle.c	/^	uint8_t Value;$/;"	m	union:uMacCommandMargin	file:
Value	src/handle.c	/^	uint8_t Value;$/;"	m	union:uMacCommandRXStatus	file:
Value	src/handle.c	/^	uint8_t Value;$/;"	m	union:uMacCommandRedundancy	file:
Value	src/handle.c	/^	uint8_t Value;$/;"	m	union:uMacCommandSettings	file:
Value	src/handle.c	/^    uint8_t Value;$/;"	m	union:uLoRaMacFrameCtrl	file:
Value	src/handle.c	/^    uint8_t Value;$/;"	m	union:uLoRaMacHeader	file:
WPOLY	src/aes.c	73;"	d	file:
X	inc/cmac.h	/^            uint8_t        X[16];$/;"	m	struct:_AES_CMAC_CTX
XOR	src/cmac.c	49;"	d	file:
_AES_CMAC_CTX	inc/cmac.h	/^typedef struct _AES_CMAC_CTX {$/;"	s
_BASE64_H	inc/base64.h	18;"	d
_CMAC_H_	inc/cmac.h	37;"	d
_CRT_SECURE_NO_WARNINGS	src/parson.c	24;"	d	file:
_LORA_PKTFWD_TIMERSYNC_H	inc/timersync.h	18;"	d
_LORA_PKTFWD_TRACE_H	inc/trace.h	18;"	d
__LORAMAC_CRYPTO_H__	inc/LoRaMacCrypto.h	38;"	d
__UTILITIES_H__	inc/utilities.h	17;"	d
aBlock	src/LoRaMacCrypto.c	/^static uint8_t aBlock[] = { 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,$/;"	v	file:
add_round_key	src/aes.c	/^static void add_round_key( uint8_t d[N_BLOCK], const uint8_t k[N_BLOCK] )$/;"	f	file:
aes_cbc_decrypt	src/aes.c	/^return_type aes_cbc_decrypt( const uint8_t *in, uint8_t *out,$/;"	f
aes_cbc_encrypt	src/aes.c	/^return_type aes_cbc_encrypt( const uint8_t *in, uint8_t *out,$/;"	f
aes_context	inc/aes.h	/^} aes_context;$/;"	t	typeref:struct:__anon1
aes_decrypt	src/aes.c	/^return_type aes_decrypt( const uint8_t in[N_BLOCK], uint8_t out[N_BLOCK], const aes_context ctx[1] )$/;"	f
aes_decrypt_128	src/aes.c	/^void aes_decrypt_128( const uint8_t in[N_BLOCK], uint8_t out[N_BLOCK],$/;"	f
aes_decrypt_256	src/aes.c	/^void aes_decrypt_256( const uint8_t in[N_BLOCK], uint8_t out[N_BLOCK],$/;"	f
aes_encrypt	src/aes.c	/^return_type aes_encrypt( const uint8_t in[N_BLOCK], uint8_t  out[N_BLOCK], const aes_context ctx[1] )$/;"	f
aes_encrypt_128	src/aes.c	/^void aes_encrypt_128( const uint8_t in[N_BLOCK], uint8_t out[N_BLOCK],$/;"	f
aes_encrypt_256	src/aes.c	/^void aes_encrypt_256( const uint8_t in[N_BLOCK], uint8_t out[N_BLOCK],$/;"	f
aes_set_key	src/aes.c	/^return_type aes_set_key( const uint8_t key[], length_type keylen, aes_context ctx[1] )$/;"	f
appSKey	inc/handle.h	/^	char appSKey[33];\/*store the appSkey which will be transferred the network controller*\/$/;"	m	struct:res_handle
append_indent	src/parson.c	/^static int append_indent(char *buf, int level) {$/;"	f	file:
append_string	src/parson.c	/^static int append_string(char *buf, const char *string) {$/;"	f	file:
appserv_addr	src/as.c	/^static char appserv_addr[64] = STR(APP_SERV_ADDR);$/;"	v	file:
appserv_addr	src/ns.c	/^static char appserv_addr[64] = STR(APP_SERV_ADDR);$/;"	v	file:
appserv_port	src/ns.c	/^static char appserv_port[8] = STR(APP_PORT_UP);$/;"	v	file:
arg	inc/handle.h	/^struct arg {  \/* use for thread argument *\/$/;"	s
array	src/parson.c	/^    JSON_Array  *array;$/;"	m	union:json_value_value	file:
as_list	src/ns.c	/^static linked_list as_list;$/;"	v	file:
as_msg_handle	src/handle.c	/^struct res_handle as_msg_handle(char* msg, int index) {$/;"	f
as_prepare_frame	src/handle.c	/^void as_prepare_frame(uint8_t *frame_payload, uint16_t devNonce, uint8_t* appKey, uint32_t devAddr, uint8_t *nwkSKey, uint8_t *appSKey) {$/;"	f
assign_msg	src/handle.c	/^void assign_msg(void* data, const void* msg) {$/;"	f
assign_msg_delay	src/handle.c	/^void assign_msg_delay(void* data, const void* msg) {$/;"	f
assign_msg_down	src/handle.c	/^void assign_msg_down(void* data, const void* msg) {$/;"	f
assign_msg_join	src/handle.c	/^void assign_msg_join(void* data, const void* msg) {$/;"	f
assign_msg_rxdelay	src/handle.c	/^void assign_msg_rxdelay(void* data,const void* msg){$/;"	f
assign_msg_trans	src/handle.c	/^void assign_msg_trans(void* data,const void* msg){$/;"	f
b64_to_bin	src/base64.c	/^int b64_to_bin(const char * in, int size, uint8_t * out, int max_len) {$/;"	f
b64_to_bin_nopad	src/base64.c	/^int b64_to_bin_nopad(const char * in, int size, uint8_t * out, int max_len) {$/;"	f
bin_to_b64	src/base64.c	/^int bin_to_b64(const uint8_t * in, int size, char * out, int max_len) {$/;"	f
bin_to_b64_nopad	src/base64.c	/^int bin_to_b64_nopad(const uint8_t * in, int size, char * out, int max_len) {$/;"	f
block_copy	src/aes.c	309;"	d	file:
block_copy	src/aes.c	312;"	d	file:
block_copy_nn	src/aes.c	308;"	d	file:
block_copy_nn	src/aes.c	311;"	d	file:
boolean	src/parson.c	/^    int          boolean;$/;"	m	union:json_value_value	file:
capacity	src/parson.c	/^    size_t       capacity;$/;"	m	struct:json_array_t	file:
capacity	src/parson.c	/^    size_t       capacity;$/;"	m	struct:json_object_t	file:
chMaskCntl	src/handle.c	/^		uint8_t chMaskCntl          :3;$/;"	m	struct:uMacCommandRedundancy::sRedundancy	file:
chan	inc/handle.h	/^	uint8_t  chan;     \/* IF channel*\/$/;"	m	struct:metadata
char_to_code	src/base64.c	/^uint8_t char_to_code(char x) {$/;"	f
cmd_list	src/nc.c	/^static linked_list  cmd_list;\/*the linked list storing commands*\/$/;"	v	file:
cmd_num	inc/handle.h	/^	uint8_t cmd_num;$/;"	m	struct:command_info
code_62	src/base64.c	/^static char code_62 = '+';	\/* RFC 1421 standard character for code 62 *\/$/;"	v	file:
code_63	src/base64.c	/^static char code_63 = '\/';	\/* RFC 1421 standard character for code 63 *\/$/;"	v	file:
code_pad	src/base64.c	/^static char code_pad = '=';	\/* RFC 1421 padding character if padding *\/$/;"	v	file:
code_to_char	src/base64.c	/^char code_to_char(uint8_t x) {$/;"	f
codr	inc/handle.h	/^	char     codr[4];  \/*ECC coding rate*\/$/;"	m	struct:metadata
command_handle	src/handle.c	/^int command_handle(int cid,uint32_t devAddr,char* json_data,...){$/;"	f
command_info	inc/handle.h	/^struct command_info {$/;"	s
compare_msg_delay	src/handle.c	/^int compare_msg_delay(const void* data, const void* key) {$/;"	f
compare_msg_down	src/handle.c	/^int compare_msg_down(const void* data, const void* key) {$/;"	f
compare_msg_join	src/handle.c	/^int compare_msg_join(const void* data, const void*key) {$/;"	f
compare_msg_rxdelay	src/handle.c	/^int compare_msg_rxdelay(const void* data,const void* key){$/;"	f
compare_msg_trans	src/handle.c	/^int compare_msg_trans(const void* data,const void* key){$/;"	f
conn_num	src/as.c	/^static int conn_num = 0;$/;"	v	file:
conn_num	src/nc.c	/^static int conn_num = 0;$/;"	v	file:
conn_num_as	src/ns.c	/^static int conn_num_as = 0;\/*the number of tcp connections with application servers*\/$/;"	v	file:
conn_num_nc	src/ns.c	/^static int conn_num_nc = 0;\/*the number of tcp connections with application servers*\/$/;"	v	file:
connfd	inc/handle.h	/^	int connfd;$/;"	m	struct:arg
connfd_as_down	src/ns.c	/^static int connfd_as_down;\/*connected sockfd for downstream from application server*\/$/;"	v	file:
connfd_nc_down	src/ns.c	/^static int connfd_nc_down;\/*connected sockfd for downstream from network controller*\/$/;"	v	file:
connfd_up	src/as.c	/^static int connfd_up;\/*connecting socket for upstream form network server*\/$/;"	v	file:
connfd_up	src/nc.c	/^static int connfd_up;\/*connecting socket for upstream form network server*\/$/;"	v	file:
connfds	src/as.c	/^static int connfds[CONNFD_NUM_MAX];\/*array for connected socket file descriptor*\/$/;"	v	file:
connfds	src/nc.c	/^static int connfds[CONNFD_NUM_MAX];\/*array for connected socket file descriptor*\/$/;"	v	file:
connfds_as	src/ns.c	/^static int connfds_as[CONNFD_NUM_MAX];$/;"	v	file:
connfds_nc	src/ns.c	/^static int connfds_nc[CONNFD_NUM_MAX];$/;"	v	file:
copy_and_key	src/aes.c	/^static void copy_and_key( void *d, const void *s, const void *k )$/;"	f	file:
copy_block	src/aes.c	/^static void copy_block( void *d, const void *s )$/;"	f	file:
copy_block_nn	src/aes.c	/^static void copy_block_nn( uint8_t * d, const uint8_t *s, uint8_t nn )$/;"	f	file:
copy_msg_delay	src/handle.c	/^void copy_msg_delay(void* data, const void* msg){$/;"	f
copy_msg_down	src/handle.c	/^void copy_msg_down(void* data, const void* msg) {$/;"	f
copy_msg_join	src/handle.c	/^void copy_msg_join(void* data, const void* msg) {$/;"	f
copy_msg_rxdelay	src/handle.c	/^void copy_msg_rxdelay(void* data,const void* msg){$/;"	f
copy_msg_trans	src/handle.c	/^void copy_msg_trans(void* data,const void* msg){$/;"	f
count	src/parson.c	/^    size_t       count;$/;"	m	struct:json_array_t	file:
count	src/parson.c	/^    size_t       count;$/;"	m	struct:json_object_t	file:
d2	src/aes.c	82;"	d	file:
data	inc/generic_list.h	/^	void* data;$/;"	m	struct:Node
datrf	inc/handle.h	/^	uint32_t datrf;    \/*data rate for FSK*\/$/;"	m	struct:metadata
datrl	inc/handle.h	/^	char     datrl[10];\/* data rate for LORA*\/$/;"	m	struct:metadata
delay	inc/handle.h	/^	uint8_t delay;$/;"	m	struct:msg_rxdelay
delay_list	src/ns.c	/^static linked_list delay_list;$/;"	v	file:
destroy_msg	src/handle.c	/^void destroy_msg(void* msg){$/;"	f
destroy_msg_delay	src/handle.c	/^void destroy_msg_delay(void* msg) {$/;"	f
destroy_msg_down	src/handle.c	/^void destroy_msg_down(void* msg){$/;"	f
devaddr	inc/handle.h	/^	uint32_t devaddr;  \/* gateway address for as downlink *\/$/;"	m	struct:jsondata
devaddr	inc/handle.h	/^	uint32_t devaddr;$/;"	m	struct:command_info
devaddr	inc/handle.h	/^	uint32_t devaddr;$/;"	m	struct:msg_delay
devaddr	inc/handle.h	/^	uint32_t devaddr;$/;"	m	struct:msg_rxdelay
devaddr	inc/handle.h	/^	uint32_t devaddr;$/;"	m	struct:msg_trans
devaddr	inc/handle.h	/^	uint32_t devaddr;$/;"	m	struct:th_check_arg
deveui_hex	inc/handle.h	/^	char deveui_hex[17];$/;"	m	struct:jsondata
deveui_hex	inc/handle.h	/^	char deveui_hex[17];$/;"	m	struct:msg_delay
deveui_hex	inc/handle.h	/^	char deveui_hex[17];$/;"	m	struct:msg_join
eLoRaMacFrameType	src/handle.c	/^typedef enum eLoRaMacFrameType {$/;"	g	file:
eLoRaMacMoteCmd	inc/handle.h	/^typedef enum eLoRaMacMoteCmd$/;"	g
eLoRaMacSrvCmd	inc/handle.h	/^typedef enum eLoRaMacSrvCmd$/;"	g
exit_sig	src/as.c	/^static bool exit_sig = false;$/;"	v	file:
exit_sig	src/nc.c	/^static bool exit_sig = false;$/;"	v	file:
exit_sig	src/ns.c	/^static bool exit_sig = false;$/;"	v	file:
f1	src/aes.c	77;"	d	file:
f2	src/aes.c	78;"	d	file:
f3	src/aes.c	84;"	d	file:
f4	src/aes.c	79;"	d	file:
f8	src/aes.c	80;"	d	file:
f9	src/aes.c	85;"	d	file:
fb	src/aes.c	86;"	d	file:
fd	src/aes.c	87;"	d	file:
fe	src/aes.c	88;"	d	file:
frame	inc/handle.h	/^	char* frame;$/;"	m	struct:msg_delay
free	src/parson.c	47;"	d	file:
freq	inc/handle.h	/^	double 	 freq;     \/*frequency of IF channel*\/$/;"	m	struct:metadata
fwd_affine	src/aes.c	/^uint8_t fwd_affine(const uint8_t x)$/;"	f
get_quoted_string	src/parson.c	/^static char * get_quoted_string(const char **string) {$/;"	f	file:
gf_inv	src/aes.c	/^static uint8_t gf_inv(const uint8_t x)$/;"	f	file:
gfm2_sb	src/aes.c	214;"	d	file:
gfm2_sb	src/aes.c	298;"	d	file:
gfm2_sbox	src/aes.c	/^static const uint8_t gfm2_sbox[256] = sb_data(f2);$/;"	v	file:
gfm3_sb	src/aes.c	215;"	d	file:
gfm3_sb	src/aes.c	299;"	d	file:
gfm3_sbox	src/aes.c	/^static const uint8_t gfm3_sbox[256] = sb_data(f3);$/;"	v	file:
gfm_9	src/aes.c	217;"	d	file:
gfm_9	src/aes.c	300;"	d	file:
gfm_b	src/aes.c	218;"	d	file:
gfm_b	src/aes.c	301;"	d	file:
gfm_d	src/aes.c	219;"	d	file:
gfm_d	src/aes.c	302;"	d	file:
gfm_e	src/aes.c	220;"	d	file:
gfm_e	src/aes.c	303;"	d	file:
gfmul_9	src/aes.c	/^static const uint8_t gfmul_9[256] = mm_data(f9);$/;"	v	file:
gfmul_b	src/aes.c	/^static const uint8_t gfmul_b[256] = mm_data(fb);$/;"	v	file:
gfmul_d	src/aes.c	/^static const uint8_t gfmul_d[256] = mm_data(fd);$/;"	v	file:
gfmul_e	src/aes.c	/^static const uint8_t gfmul_e[256] = mm_data(fe);$/;"	v	file:
gw_list	src/ns.c	/^static linked_list gw_list;$/;"	v	file:
gwaddr	inc/handle.h	/^	char     gwaddr[16];$/;"	m	struct:metadata
gwaddr	inc/handle.h	/^	char gwaddr[16];\/*gateway address*\/$/;"	m	struct:pkt_info
gwaddr	inc/handle.h	/^	char*  gwaddr;$/;"	m	struct:msg_down
head	inc/generic_list.h	/^	struct Node* head;$/;"	m	struct:List	typeref:struct:List::Node
hibit	src/aes.c	/^static uint8_t hibit(const uint8_t x)$/;"	f	file:
i8_to_hexstr	src/handle.c	/^void i8_to_hexstr(uint8_t* uint, char* str, int size) {$/;"	f
inv_affine	src/aes.c	/^uint8_t inv_affine(const uint8_t x)$/;"	f
inv_mix_sub_columns	src/aes.c	/^  static void inv_mix_sub_columns( uint8_t dt[N_BLOCK] )$/;"	f	file:
inv_shift_sub_rows	src/aes.c	/^static void inv_shift_sub_rows( uint8_t st[N_BLOCK] )$/;"	f	file:
is_box	src/aes.c	212;"	d	file:
is_box	src/aes.c	297;"	d	file:
is_decimal	src/parson.c	/^static int is_decimal(const char *string, size_t length) {$/;"	f	file:
is_utf16_hex	src/parson.c	/^static int is_utf16_hex(const unsigned char *s) {$/;"	f	file:
is_valid_utf8	src/parson.c	/^static int is_valid_utf8(const char *string, size_t string_len) {$/;"	f	file:
isb_data	src/aes.c	126;"	d	file:
isbox	src/aes.c	/^static const uint8_t isbox[256] = isb_data(f1);$/;"	v	file:
isworked	inc/handle.h	/^	bool isworked[15];$/;"	m	struct:command_info
items	src/parson.c	/^    JSON_Value **items;$/;"	m	struct:json_array_t	file:
join	inc/handle.h	/^	bool join; \/*is it a join request message*\/$/;"	m	struct:jsondata
join_list	src/ns.c	/^static linked_list join_list;$/;"	v	file:
json_array	src/parson.c	/^JSON_Array * json_array  (const JSON_Value *value) {$/;"	f
json_array_add	src/parson.c	/^static JSON_Status json_array_add(JSON_Array *array, JSON_Value *value) {$/;"	f	file:
json_array_append_boolean	src/parson.c	/^JSON_Status json_array_append_boolean(JSON_Array *array, int boolean) {$/;"	f
json_array_append_null	src/parson.c	/^JSON_Status json_array_append_null(JSON_Array *array) {$/;"	f
json_array_append_number	src/parson.c	/^JSON_Status json_array_append_number(JSON_Array *array, double number) {$/;"	f
json_array_append_string	src/parson.c	/^JSON_Status json_array_append_string(JSON_Array *array, const char *string) {$/;"	f
json_array_append_value	src/parson.c	/^JSON_Status json_array_append_value(JSON_Array *array, JSON_Value *value) {$/;"	f
json_array_clear	src/parson.c	/^JSON_Status json_array_clear(JSON_Array *array) {$/;"	f
json_array_free	src/parson.c	/^static void json_array_free(JSON_Array *array) {$/;"	f	file:
json_array_get_array	src/parson.c	/^JSON_Array * json_array_get_array(const JSON_Array *array, size_t index) {$/;"	f
json_array_get_boolean	src/parson.c	/^int json_array_get_boolean(const JSON_Array *array, size_t index) {$/;"	f
json_array_get_count	src/parson.c	/^size_t json_array_get_count(const JSON_Array *array) {$/;"	f
json_array_get_number	src/parson.c	/^double json_array_get_number(const JSON_Array *array, size_t index) {$/;"	f
json_array_get_object	src/parson.c	/^JSON_Object * json_array_get_object(const JSON_Array *array, size_t index) {$/;"	f
json_array_get_string	src/parson.c	/^const char * json_array_get_string(const JSON_Array *array, size_t index) {$/;"	f
json_array_get_value	src/parson.c	/^JSON_Value * json_array_get_value(const JSON_Array *array, size_t index) {$/;"	f
json_array_init	src/parson.c	/^static JSON_Array * json_array_init(void) {$/;"	f	file:
json_array_remove	src/parson.c	/^JSON_Status json_array_remove(JSON_Array *array, size_t ix) {$/;"	f
json_array_replace_boolean	src/parson.c	/^JSON_Status json_array_replace_boolean(JSON_Array *array, size_t i, int boolean) {$/;"	f
json_array_replace_null	src/parson.c	/^JSON_Status json_array_replace_null(JSON_Array *array, size_t i) {$/;"	f
json_array_replace_number	src/parson.c	/^JSON_Status json_array_replace_number(JSON_Array *array, size_t i, double number) {$/;"	f
json_array_replace_string	src/parson.c	/^JSON_Status json_array_replace_string(JSON_Array *array, size_t i, const char* string) {$/;"	f
json_array_replace_value	src/parson.c	/^JSON_Status json_array_replace_value(JSON_Array *array, size_t ix, JSON_Value *value) {$/;"	f
json_array_resize	src/parson.c	/^static JSON_Status json_array_resize(JSON_Array *array, size_t new_capacity) {$/;"	f	file:
json_array_t	src/parson.c	/^struct json_array_t {$/;"	s	file:
json_boolean	src/parson.c	/^int json_boolean(const JSON_Value *value) {$/;"	f
json_content	inc/handle.h	/^	char json_content[JSON_MAX];$/;"	m	struct:pkt
json_free_serialized_string	src/parson.c	/^void json_free_serialized_string(char *string) {$/;"	f
json_number	src/parson.c	/^double json_number (const JSON_Value *value) {$/;"	f
json_object	src/parson.c	/^JSON_Object * json_object (const JSON_Value *value) {$/;"	f
json_object_add	src/parson.c	/^static JSON_Status json_object_add(JSON_Object *object, const char *name, JSON_Value *value) {$/;"	f	file:
json_object_clear	src/parson.c	/^JSON_Status json_object_clear(JSON_Object *object) {$/;"	f
json_object_dotget_array	src/parson.c	/^JSON_Array * json_object_dotget_array(const JSON_Object *object, const char *name) {$/;"	f
json_object_dotget_boolean	src/parson.c	/^int json_object_dotget_boolean(const JSON_Object *object, const char *name) {$/;"	f
json_object_dotget_number	src/parson.c	/^double json_object_dotget_number(const JSON_Object *object, const char *name) {$/;"	f
json_object_dotget_object	src/parson.c	/^JSON_Object * json_object_dotget_object(const JSON_Object *object, const char *name) {$/;"	f
json_object_dotget_string	src/parson.c	/^const char * json_object_dotget_string(const JSON_Object *object, const char *name) {$/;"	f
json_object_dotget_value	src/parson.c	/^JSON_Value * json_object_dotget_value(const JSON_Object *object, const char *name) {$/;"	f
json_object_dotremove	src/parson.c	/^JSON_Status json_object_dotremove(JSON_Object *object, const char *name) {$/;"	f
json_object_dotset_boolean	src/parson.c	/^JSON_Status json_object_dotset_boolean(JSON_Object *object, const char *name, int boolean) {$/;"	f
json_object_dotset_null	src/parson.c	/^JSON_Status json_object_dotset_null(JSON_Object *object, const char *name) {$/;"	f
json_object_dotset_number	src/parson.c	/^JSON_Status json_object_dotset_number(JSON_Object *object, const char *name, double number) {$/;"	f
json_object_dotset_string	src/parson.c	/^JSON_Status json_object_dotset_string(JSON_Object *object, const char *name, const char *string) {$/;"	f
json_object_dotset_value	src/parson.c	/^JSON_Status json_object_dotset_value(JSON_Object *object, const char *name, JSON_Value *value) {$/;"	f
json_object_free	src/parson.c	/^static void json_object_free(JSON_Object *object) {$/;"	f	file:
json_object_get_array	src/parson.c	/^JSON_Array * json_object_get_array(const JSON_Object *object, const char *name) {$/;"	f
json_object_get_boolean	src/parson.c	/^int json_object_get_boolean(const JSON_Object *object, const char *name) {$/;"	f
json_object_get_count	src/parson.c	/^size_t json_object_get_count(const JSON_Object *object) {$/;"	f
json_object_get_name	src/parson.c	/^const char * json_object_get_name(const JSON_Object *object, size_t index) {$/;"	f
json_object_get_number	src/parson.c	/^double json_object_get_number(const JSON_Object *object, const char *name) {$/;"	f
json_object_get_object	src/parson.c	/^JSON_Object * json_object_get_object(const JSON_Object *object, const char *name) {$/;"	f
json_object_get_string	src/parson.c	/^const char * json_object_get_string(const JSON_Object *object, const char *name) {$/;"	f
json_object_get_value	src/parson.c	/^JSON_Value * json_object_get_value(const JSON_Object *object, const char *name) {$/;"	f
json_object_init	src/parson.c	/^static JSON_Object * json_object_init(void) {$/;"	f	file:
json_object_nget_value	src/parson.c	/^static JSON_Value * json_object_nget_value(const JSON_Object *object, const char *name, size_t n) {$/;"	f	file:
json_object_remove	src/parson.c	/^JSON_Status json_object_remove(JSON_Object *object, const char *name) {$/;"	f
json_object_resize	src/parson.c	/^static JSON_Status json_object_resize(JSON_Object *object, size_t new_capacity) {$/;"	f	file:
json_object_set_boolean	src/parson.c	/^JSON_Status json_object_set_boolean(JSON_Object *object, const char *name, int boolean) {$/;"	f
json_object_set_null	src/parson.c	/^JSON_Status json_object_set_null(JSON_Object *object, const char *name) {$/;"	f
json_object_set_number	src/parson.c	/^JSON_Status json_object_set_number(JSON_Object *object, const char *name, double number) {$/;"	f
json_object_set_string	src/parson.c	/^JSON_Status json_object_set_string(JSON_Object *object, const char *name, const char *string) {$/;"	f
json_object_set_value	src/parson.c	/^JSON_Status json_object_set_value(JSON_Object *object, const char *name, JSON_Value *value) {$/;"	f
json_object_t	src/parson.c	/^struct json_object_t {$/;"	s	file:
json_parse_file	src/parson.c	/^JSON_Value * json_parse_file(const char *filename) {$/;"	f
json_parse_file_with_comments	src/parson.c	/^JSON_Value * json_parse_file_with_comments(const char *filename) {$/;"	f
json_parse_string	src/parson.c	/^JSON_Value * json_parse_string(const char *string) {$/;"	f
json_parse_string_with_comments	src/parson.c	/^JSON_Value * json_parse_string_with_comments(const char *string) {$/;"	f
json_result_t	inc/parson.h	/^enum json_result_t {$/;"	g
json_serialization_size	src/parson.c	/^size_t json_serialization_size(const JSON_Value *value) {$/;"	f
json_serialization_size_pretty	src/parson.c	/^size_t json_serialization_size_pretty(const JSON_Value *value) {$/;"	f
json_serialize_string	src/parson.c	/^static int json_serialize_string(const char *string, char *buf) {$/;"	f	file:
json_serialize_to_buffer	src/parson.c	/^JSON_Status json_serialize_to_buffer(const JSON_Value *value, char *buf, size_t buf_size_in_bytes) {$/;"	f
json_serialize_to_buffer_pretty	src/parson.c	/^JSON_Status json_serialize_to_buffer_pretty(const JSON_Value *value, char *buf, size_t buf_size_in_bytes) {$/;"	f
json_serialize_to_buffer_r	src/parson.c	/^static int json_serialize_to_buffer_r(const JSON_Value *value, char *buf, int level, int is_pretty, char *num_buf)$/;"	f	file:
json_serialize_to_file	src/parson.c	/^JSON_Status json_serialize_to_file(const JSON_Value *value, const char *filename) {$/;"	f
json_serialize_to_file_pretty	src/parson.c	/^JSON_Status json_serialize_to_file_pretty(const JSON_Value *value, const char *filename) {$/;"	f
json_serialize_to_string	src/parson.c	/^char * json_serialize_to_string(const JSON_Value *value) {$/;"	f
json_serialize_to_string_pretty	src/parson.c	/^char * json_serialize_to_string_pretty(const JSON_Value *value) {$/;"	f
json_set_allocation_functions	src/parson.c	/^void json_set_allocation_functions(JSON_Malloc_Function malloc_fun, JSON_Free_Function free_fun) {$/;"	f
json_string	inc/handle.h	/^	char json_string[JSON_MAX];$/;"	m	struct:res_handle
json_string	inc/handle.h	/^	char*  json_string;$/;"	m	struct:msg
json_string	inc/handle.h	/^	char*  json_string;$/;"	m	struct:msg_down
json_string	src/parson.c	/^const char * json_string (const JSON_Value *value) {$/;"	f
json_string_as	inc/handle.h	/^	char json_string_as[JSON_MAX]; \/* json_string_as is sent for application server *\/$/;"	m	struct:jsondata
json_string_nc	inc/handle.h	/^	char json_string_nc[JSON_MAX]; \/* send for network controller *\/$/;"	m	struct:jsondata
json_type	src/parson.c	/^JSON_Value_Type json_type(const JSON_Value *value) {$/;"	f
json_validate	src/parson.c	/^JSON_Status json_validate(const JSON_Value *schema, const JSON_Value *value) {$/;"	f
json_value_deep_copy	src/parson.c	/^JSON_Value * json_value_deep_copy(const JSON_Value *value) {$/;"	f
json_value_equals	src/parson.c	/^JSON_Status json_value_equals(const JSON_Value *a, const JSON_Value *b) {$/;"	f
json_value_free	src/parson.c	/^void json_value_free(JSON_Value *value) {$/;"	f
json_value_get_array	src/parson.c	/^JSON_Array * json_value_get_array(const JSON_Value *value) {$/;"	f
json_value_get_boolean	src/parson.c	/^int json_value_get_boolean(const JSON_Value *value) {$/;"	f
json_value_get_number	src/parson.c	/^double json_value_get_number(const JSON_Value *value) {$/;"	f
json_value_get_object	src/parson.c	/^JSON_Object * json_value_get_object(const JSON_Value *value) {$/;"	f
json_value_get_string	src/parson.c	/^const char * json_value_get_string(const JSON_Value *value) {$/;"	f
json_value_get_type	src/parson.c	/^JSON_Value_Type json_value_get_type(const JSON_Value *value) {$/;"	f
json_value_init_array	src/parson.c	/^JSON_Value * json_value_init_array(void) {$/;"	f
json_value_init_boolean	src/parson.c	/^JSON_Value * json_value_init_boolean(int boolean) {$/;"	f
json_value_init_null	src/parson.c	/^JSON_Value * json_value_init_null(void) {$/;"	f
json_value_init_number	src/parson.c	/^JSON_Value * json_value_init_number(double number) {$/;"	f
json_value_init_object	src/parson.c	/^JSON_Value * json_value_init_object(void) {$/;"	f
json_value_init_string	src/parson.c	/^JSON_Value * json_value_init_string(const char *string) {$/;"	f
json_value_init_string_no_copy	src/parson.c	/^static JSON_Value * json_value_init_string_no_copy(char *string) {$/;"	f	file:
json_value_t	src/parson.c	/^struct json_value_t {$/;"	s	file:
json_value_type	inc/parson.h	/^enum json_value_type {$/;"	g
json_value_value	src/parson.c	/^typedef union json_value_value {$/;"	u	file:
jsondata	inc/handle.h	/^struct jsondata {$/;"	s
ksch	inc/aes.h	/^{   uint8_t ksch[(N_MAX_ROUNDS + 1) * N_BLOCK];$/;"	m	struct:__anon1
length	inc/generic_list.h	/^	long  length;$/;"	m	struct:List
length_type	inc/aes.h	/^typedef uint8_t length_type;$/;"	t
linked_list	inc/generic_list.h	/^}linked_list, *plist;$/;"	t	typeref:struct:List
list_delete_at_head	src/generic_list.c	/^void list_delete_at_head(plist list,void(*destroy)(void*)){$/;"	f
list_destroy	src/generic_list.c	/^void list_destroy(plist list,void(*destroy)(void*)){$/;"	f
list_init	src/generic_list.c	/^void list_init(plist list){$/;"	f
list_insert_at_tail	src/generic_list.c	/^void list_insert_at_tail(plist list,void* data,int size,void(*assign)(void*,const void*)){$/;"	f
list_is_empty	src/generic_list.c	/^bool list_is_empty(plist list){$/;"	f
list_node	inc/generic_list.h	/^}list_node, *pnode;$/;"	t	typeref:struct:Node
list_search	src/generic_list.c	/^bool list_search(plist list,void* key,void* data,int(*compare)(const void*,const void*),void(*deep_copy)(void*,const void*)){$/;"	f
list_search_and_delete	src/generic_list.c	/^bool list_search_and_delete(plist list,void* key,void* data,int(*compare)(const void*,const void*),void(*deep_copy)(void*,const void*),void(*destroy)(void*)){$/;"	f
list_search_and_update	src/generic_list.c	/^void list_search_and_update(plist list,void* key,void* new_data,int size,int(*compare)(const void*,const void*),void(*assign)(void*,const void*)){$/;"	f
listenfd_app_down	src/ns.c	/^static int listenfd_app_down;\/*listening sockfd for downstream from application server*\/$/;"	v	file:
listenfd_nc_down	src/ns.c	/^static int listenfd_nc_down;\/*listening sockfd for downstream from network controller*\/$/;"	v	file:
listenfd_up	src/as.c	/^static int listenfd_up;\/* listening socket for upstream from network server*\/$/;"	v	file:
listenfd_up	src/nc.c	/^static int listenfd_up;\/* listening socket for upstream from network server*\/$/;"	v	file:
lsnr	inc/handle.h	/^	float    lsnr;     \/*SNR in dB*\/$/;"	m	struct:metadata
main	src/as.c	/^int main(int argc, char** argv) {$/;"	f
main	src/nc.c	/^int main(int argc, char** argv) {$/;"	f
main	src/ns.c	/^int main(int argc, char** argv) {$/;"	f
malloc	src/parson.c	46;"	d	file:
memcpy1	src/utilities.c	/^void memcpy1( uint8_t *dst, const uint8_t *src, uint16_t size )$/;"	f
memcpyr	src/utilities.c	/^void memcpyr( uint8_t *dst, const uint8_t *src, uint16_t size )$/;"	f
memset1	src/utilities.c	/^void memset1( uint8_t *dst, uint8_t value, uint16_t size )$/;"	f
metadata	inc/handle.h	/^struct metadata {$/;"	s
mix_sub_columns	src/aes.c	/^  static void mix_sub_columns( uint8_t dt[N_BLOCK] )$/;"	f	file:
mm_data	src/aes.c	160;"	d	file:
modu	inc/handle.h	/^	char     modu[5];  \/* modulation:LORA or FSK*\/$/;"	m	struct:metadata
msg	inc/handle.h	/^struct msg {$/;"	s
msg_delay	inc/handle.h	/^struct msg_delay {$/;"	s
msg_down	inc/handle.h	/^struct msg_down {$/;"	s
msg_join	inc/handle.h	/^struct msg_join {$/;"	s
msg_rxdelay	inc/handle.h	/^struct msg_rxdelay{$/;"	s
msg_trans	inc/handle.h	/^struct msg_trans{$/;"	s
mx_as_list	src/ns.c	/^static pthread_mutex_t mx_as_list = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
mx_cmd_list	src/nc.c	/^static pthread_mutex_t mx_cmd_list = PTHREAD_MUTEX_INITIALIZER;\/*mutex lock for conrolling access to the linked list storing commands*\/$/;"	v	file:
mx_conn	src/as.c	/^static pthread_mutex_t mx_conn = PTHREAD_MUTEX_INITIALIZER;\/*mutex lock for controlling rewriting gloable variable conn_num*\/$/;"	v	file:
mx_conn	src/nc.c	/^static pthread_mutex_t mx_conn = PTHREAD_MUTEX_INITIALIZER;\/*mutex lock for controlling rewriting gloable variable conn_num*\/$/;"	v	file:
mx_conn_as	src/ns.c	/^static pthread_mutex_t mx_conn_as;$/;"	v	file:
mx_conn_nc	src/ns.c	/^static pthread_mutex_t mx_conn_nc;$/;"	v	file:
mx_db	src/as.c	/^static pthread_mutex_t mx_db = PTHREAD_MUTEX_INITIALIZER;\/*mutex lock for controlling access to the database*\/$/;"	v	file:
mx_db	src/ns.c	/^static pthread_mutex_t mx_db = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
mx_delay_list	src/ns.c	/^static pthread_mutex_t mx_delay_list = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
mx_gw_list	src/ns.c	/^static pthread_mutex_t mx_gw_list = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
mx_join_list	src/ns.c	/^static pthread_mutex_t mx_join_list = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
mx_nc_list	src/ns.c	/^static pthread_mutex_t mx_nc_list = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
mx_ns_list	src/as.c	/^static pthread_mutex_t mx_ns_list = PTHREAD_MUTEX_INITIALIZER;\/*mutex lock for controlling acess to the linked list*\/$/;"	v	file:
mx_push	src/ns.c	/^static pthread_mutex_t mx_push = PTHREAD_MUTEX_INITIALIZER; \/* control access to the push_data upstream measurements *\/$/;"	v	file:
mx_rxdelay_list	src/nc.c	/^static pthread_mutex_t mx_rxdelay_list = PTHREAD_MUTEX_INITIALIZER;\/*mutex lock for controlling access to the linked list storing receive window delay*\/$/;"	v	file:
mx_trans_list	src/nc.c	/^static pthread_mutex_t mx_trans_list = PTHREAD_MUTEX_INITIALIZER;\/*mutex lock for controlling access to the linked list storing transfering arguments*\/$/;"	v	file:
names	src/parson.c	/^    char       **names;$/;"	m	struct:json_object_t	file:
nb_push_rcv	src/ns.c	/^static uint32_t nb_push_rcv = 0; \/* count push_data packets received *\/$/;"	v	file:
nc_list	src/ns.c	/^static linked_list nc_list;$/;"	v	file:
nc_msg_handle	src/handle.c	/^void nc_msg_handle(const char* msg, int index, struct command_info* cmd_info) {$/;"	f
nc_prepare_frame	src/handle.c	/^void nc_prepare_frame(uint8_t type, uint32_t devAddr, uint32_t downcnt, const uint8_t* payload, const uint8_t* nwkSKey, int payload_size,uint8_t* frame, int* frame_size){$/;"	f
ncserv_addr	src/nc.c	/^static char ncserv_addr[64] = STR(NC_SERV_ADDR);$/;"	v	file:
ncserv_addr	src/ns.c	/^static char ncserv_addr[64] = STR(NC_SERV_ADDR);$/;"	v	file:
ncserv_port	src/ns.c	/^static char ncserv_port[8] = STR(NC_PORT_UP);$/;"	v	file:
netserv_addr	src/as.c	/^static char netserv_addr[64] = STR(NET_SERV_ADDR);$/;"	v	file:
netserv_addr	src/nc.c	/^static char netserv_addr[64] = STR(NET_SERV_ADDR);$/;"	v	file:
netserv_addr	src/ns.c	/^static char netserv_addr[64] = STR(NET_SERV_ADDR);$/;"	v	file:
netserv_port_foras	src/ns.c	/^static char netserv_port_foras[8] = STR(APP_PORT_DOWN);$/;"	v	file:
netserv_port_fornc	src/ns.c	/^static char netserv_port_fornc[8] = STR(NC_PORT_DOWN);$/;"	v	file:
netserv_port_pull	src/ns.c	/^static char netserv_port_pull[8] = STR(NET_PORT_PULL);$/;"	v	file:
netserv_port_push	src/ns.c	/^static char netserv_port_push[8] = STR(NET_PORT_PUSH);$/;"	v	file:
next	inc/generic_list.h	/^	struct Node* next;$/;"	m	struct:Node	typeref:struct:Node::Node
next	src/utilities.c	/^static uint32_t next = 1;$/;"	v	file:
nonces.IF	inc/structure.sql	/^CREATE TRIGGER IF NOT EXISTS `updata_nonces_time`  $/;"	T
ns_list	src/as.c	/^linked_list  ns_list;\/*head of the linked list storing json string for NS*\/$/;"	v
ns_msg_handle	src/handle.c	/^void ns_msg_handle(struct jsondata* result, struct metadata* meta, uint8_t* payload) {$/;"	f
null	src/parson.c	/^    int          null;$/;"	m	union:json_value_value	file:
num_bytes_in_utf8_sequence	src/parson.c	/^static int num_bytes_in_utf8_sequence(unsigned char c) {$/;"	f	file:
number	src/parson.c	/^    double       number;$/;"	m	union:json_value_value	file:
object	src/parson.c	/^    JSON_Object *object;$/;"	m	union:json_value_value	file:
parse_array_value	src/parson.c	/^static JSON_Value * parse_array_value(const char **string, size_t nesting) {$/;"	f	file:
parse_boolean_value	src/parson.c	/^static JSON_Value * parse_boolean_value(const char **string) {$/;"	f	file:
parse_null_value	src/parson.c	/^static JSON_Value * parse_null_value(const char **string) {$/;"	f	file:
parse_number_value	src/parson.c	/^static JSON_Value * parse_number_value(const char **string) {$/;"	f	file:
parse_object_value	src/parson.c	/^static JSON_Value * parse_object_value(const char **string, size_t nesting) {$/;"	f	file:
parse_string_value	src/parson.c	/^static JSON_Value * parse_string_value(const char **string) {$/;"	f	file:
parse_utf_16	src/parson.c	/^static int parse_utf_16(const char **unprocessed, char **processed) {$/;"	f	file:
parse_value	src/parson.c	/^static JSON_Value * parse_value(const char **string, size_t nesting) {$/;"	f	file:
parson_free	src/parson.c	/^static JSON_Free_Function parson_free = free;$/;"	v	file:
parson_malloc	src/parson.c	/^static JSON_Malloc_Function parson_malloc = malloc;$/;"	v	file:
parson_parson_h	inc/parson.h	25;"	d
parson_strdup	src/parson.c	/^static char * parson_strdup(const char *string) {$/;"	f	file:
parson_strndup	src/parson.c	/^static char * parson_strndup(const char *string, size_t n) {$/;"	f	file:
pkt	inc/handle.h	/^struct pkt {$/;"	s
pkt_info	inc/handle.h	/^struct pkt_info {$/;"	s
pkt_no	inc/handle.h	/^	int  pkt_no;\/*packet number*\/$/;"	m	struct:pkt_info
pkt_payload	inc/handle.h	/^	uint8_t pkt_payload[BUFF_SIZE - 12];\/*packet payload*\/$/;"	m	struct:pkt_info
plist	inc/generic_list.h	/^}linked_list, *plist;$/;"	t	typeref:struct:List
pnode	inc/generic_list.h	/^}list_node, *pnode;$/;"	t	typeref:struct:Node
port_down	src/as.c	/^static char port_down[8] = STR(APP_PORT_DOWN);$/;"	v	file:
port_down	src/nc.c	/^static char port_down[8] = STR(NC_PORT_DOWN);$/;"	v	file:
port_up	src/as.c	/^static char port_up[8] = STR(APP_PORT_UP);$/;"	v	file:
port_up	src/nc.c	/^static char port_up[8] = STR(NC_PORT_UP);$/;"	v	file:
process_string	src/parson.c	/^static char* process_string(const char *input, size_t len) {$/;"	f	file:
query_db_by_addr	src/db.c	/^int query_db_by_addr(sqlite3* db, const char* column_name, const char* table_name, unsigned int devaddr, uint8_t* data, int size) {$/;"	f
query_db_by_addr_str	src/db.c	/^int query_db_by_addr_str(sqlite3* db, const char* column_name, const char* table_name, unsigned int devaddr, char* data) {$/;"	f
query_db_by_addr_uint	src/db.c	/^int query_db_by_addr_uint(sqlite3* db, const char* column_name, const char* table_name, unsigned int devaddr, unsigned int* data) {$/;"	f
query_db_by_deveui	src/db.c	/^int query_db_by_deveui(sqlite3* db, const char* column_name, const char* table_name, const char* deveui, uint8_t* data, int size){$/;"	f
query_db_by_deveui_str	src/db.c	/^int query_db_by_deveui_str(sqlite3* db, const char* column_name, const char* table_name, const char* deveui, char* data){$/;"	f
query_db_by_deveui_uint	src/db.c	/^int query_db_by_deveui_uint(sqlite3* db, const char* column_name, const char* table_name, const char* deveui, unsigned int* data) {$/;"	f
rand1	src/utilities.c	/^int32_t rand1( void )$/;"	f
randr	src/utilities.c	/^int32_t randr( int32_t min, int32_t max )$/;"	f
read_file	src/parson.c	/^static char * read_file(const char * filename) {$/;"	f	file:
remove_comments	src/parson.c	/^static void remove_comments(char *string, const char *start_token, const char *end_token) {$/;"	f	file:
res_handle	inc/handle.h	/^struct res_handle{$/;"	s
result	src/db.c	/^uint8_t* result;$/;"	v
return_type	inc/aes.h	/^typedef uint8_t return_type;$/;"	t
revercpy	src/handle.c	/^void revercpy( uint8_t *dst, const uint8_t *src, int size) {$/;"	f
rfch	inc/handle.h	/^	uint8_t  rfch;     \/* RF channel*\/$/;"	m	struct:metadata
rijndael	inc/cmac.h	/^            aes_context    rijndael;$/;"	m	struct:_AES_CMAC_CTX
rnd	inc/aes.h	/^    uint8_t rnd;$/;"	m	struct:__anon1
rssi	inc/handle.h	/^	float    rssi;	   \/*rssi in dB*\/$/;"	m	struct:metadata
rx1_dr	inc/handle.h	/^	uint8_t rx1_dr;$/;"	m	struct:msg_trans
rx2_dr	inc/handle.h	/^	uint8_t rx2_dr;$/;"	m	struct:msg_trans
rx2_freq	inc/handle.h	/^	uint32_t rx2_freq;$/;"	m	struct:msg_trans
rxdelay_list	src/nc.c	/^static linked_list  rxdelay_list;\/*the linked list storing the receive window delay*\/$/;"	v	file:
sADRStatus	src/handle.c	/^	struct sADRStatus{$/;"	s	union:uMacCommandADRStatus	file:
sBlock	src/LoRaMacCrypto.c	/^static uint8_t sBlock[] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,$/;"	v	file:
sChannelStatus	src/handle.c	/^	struct sChannelStatus{$/;"	s	union:uMacCommandChannelStatus	file:
sCtrlBits	src/handle.c	/^    struct sCtrlBits$/;"	s	union:uLoRaMacFrameCtrl	file:
sDLSBits	src/handle.c	/^	struct sDLSBits{$/;"	s	union:uLoRaMacDLSettings	file:
sDLSettings	src/handle.c	/^	struct sDLSettings{$/;"	s	union:uMacCommandDLSettings	file:
sDataRateTxPower	src/handle.c	/^	struct sDataRateTxPower{$/;"	s	union:uMacCommandDataRateTxPower	file:
sDrRange	src/handle.c	/^	struct sDrRange{$/;"	s	union:uMacCommandDrRange	file:
sHdrBits	src/handle.c	/^    struct sHdrBits$/;"	s	union:uLoRaMacHeader	file:
sMargin	src/handle.c	/^	struct sMargin{$/;"	s	union:uMacCommandMargin	file:
sRXStatus	src/handle.c	/^	struct sRXStatus{$/;"	s	union:uMacCommandRXStatus	file:
sRedundancy	src/handle.c	/^	struct sRedundancy{$/;"	s	union:uMacCommandRedundancy	file:
sRxDBits	src/handle.c	/^	struct sRxDBits{$/;"	s	union:uLoRaMacRxDelay	file:
sSettings	src/handle.c	/^	struct sSettings{$/;"	s	union:uMacCommandSettings	file:
s_box	src/aes.c	210;"	d	file:
s_box	src/aes.c	296;"	d	file:
sb_data	src/aes.c	92;"	d	file:
sbox	src/aes.c	/^static const uint8_t sbox[256]  =  sb_data(f1);$/;"	v	file:
serialize_msg_to_gw	src/handle.c	/^bool serialize_msg_to_gw(const char* data, int size, const char* deveui_hex, char* json_data, char* gwaddr, uint32_t tmst, int delay) {$/;"	f
set_timer	src/handle.c	/^void set_timer(int sec,int msec) {$/;"	f
shift_sub_rows	src/aes.c	/^static void shift_sub_rows( uint8_t st[N_BLOCK] )$/;"	f	file:
signal	inc/handle.h	/^	uint8_t signal;\/*indicates whether the struct stores the infomation*\/$/;"	m	struct:res_handle
signal_handle	src/as.c	/^void signal_handle(int signo) {$/;"	f
signal_handle	src/nc.c	/^void signal_handle(int signo) {$/;"	f
signal_handle	src/ns.c	/^void signal_handle(int signo){$/;"	f
size	inc/handle.h	/^	int size;$/;"	m	struct:msg_delay
size	inc/handle.h	/^	uint16_t size;     \/*payload size in bytes*\/$/;"	m	struct:metadata
skip_quotes	src/parson.c	/^static void skip_quotes(const char **string) {$/;"	f	file:
sockfd_app_up	src/ns.c	/^static int sockfd_app_up;\/* socket for upstream to application server*\/$/;"	v	file:
sockfd_down	src/as.c	/^static int sockfd_down;\/* socket for downstream to network server*\/$/;"	v	file:
sockfd_down	src/nc.c	/^static int sockfd_down;\/* socket for downstream to network server*\/$/;"	v	file:
sockfd_nc_up	src/ns.c	/^static int sockfd_nc_up; \/* socket for  upstream to network control server*\/$/;"	v	file:
sockfd_pull	src/ns.c	/^static int sockfd_pull;\/*socket for downstream to gateway*\/$/;"	v	file:
sockfd_push	src/ns.c	/^static int sockfd_push;\/*socket for upstream from gateway*\/$/;"	v	file:
sql	src/db.c	/^char sql[128];$/;"	v
srand1	src/utilities.c	/^void srand1( uint32_t seed )$/;"	f
stat	inc/handle.h	/^	uint8_t  stat;     \/* packet status*\/$/;"	m	struct:metadata
str_to_hex	src/db.c	/^void str_to_hex(uint8_t* dest, char* src, int len) {$/;"	f
string	src/parson.c	/^    char        *string;$/;"	m	union:json_value_value	file:
tail	inc/generic_list.h	/^	struct Node* tail;$/;"	m	struct:List	typeref:struct:List::Node
tcp_bind	src/handle.c	/^void tcp_bind(const char* servaddr, const char* port, int* listenfd) {$/;"	f
tcp_connect	src/handle.c	/^void tcp_connect(const char* servaddr, const char* port, int* sockfd, bool* exit_sig) {$/;"	f
th_check_arg	inc/handle.h	/^struct th_check_arg {$/;"	s
thread_as_down	src/ns.c	/^void thread_as_down() {$/;"	f
thread_as_down_handle	src/ns.c	/^void thread_as_down_handle(void* arg) {$/;"	f
thread_as_up	src/ns.c	/^void thread_as_up(void) {$/;"	f
thread_down	src/as.c	/^void thread_down() {$/;"	f
thread_down	src/nc.c	/^void thread_down(){$/;"	f
thread_down	src/ns.c	/^void thread_down(void) {$/;"	f
thread_list_check	src/ns.c	/^void thread_list_check(void* arg) {$/;"	f
thread_nc_down	src/ns.c	/^void thread_nc_down() {$/;"	f
thread_nc_down_handle	src/ns.c	/^void thread_nc_down_handle(void* arg) {$/;"	f
thread_nc_up	src/ns.c	/^void thread_nc_up(void) {$/;"	f
thread_up	src/as.c	/^void thread_up() {$/;"	f
thread_up	src/nc.c	/^void thread_up() {$/;"	f
thread_up	src/ns.c	/^void thread_up(void) {$/;"	f
thread_up_handle	src/as.c	/^void thread_up_handle(void* arg) {$/;"	f
thread_up_handle	src/nc.c	/^void thread_up_handle(void* arg) {$/;"	f
thread_up_handle	src/ns.c	/^void thread_up_handle(void* pkt_info) {$/;"	f
time	inc/handle.h	/^	char     time[28];$/;"	m	struct:metadata
tmst	inc/handle.h	/^	uint32_t tmst;     \/*raw time stamp*\/$/;"	m	struct:metadata
tmst	inc/handle.h	/^	uint32_t tmst;$/;"	m	struct:msg_join
tmst	inc/handle.h	/^	uint32_t tmst;$/;"	m	struct:th_check_arg
tmst_g	src/ns.c	/^static uint32_t tmst_g;$/;"	v	file:
to	inc/handle.h	/^	int to; \/* which server to send to 1.app 2.nc 3.both 4.err 5.ignore *\/$/;"	m	struct:jsondata
trans_list	src/nc.c	/^static linked_list  trans_list;\/*the linked list storing transfering arguments*\/$/;"	v	file:
type	inc/handle.h	/^	uint8_t type[15];$/;"	m	struct:command_info
type	src/parson.c	/^    JSON_Value_Type     type;$/;"	m	struct:json_value_t	file:
uLoRaMacDLSettings	src/handle.c	/^typedef union uLoRaMacDLSettings{$/;"	u	file:
uLoRaMacFrameCtrl	src/handle.c	/^typedef union uLoRaMacFrameCtrl {$/;"	u	file:
uLoRaMacHeader	src/handle.c	/^typedef union uLoRaMacHeader {$/;"	u	file:
uLoRaMacRxDelay	src/handle.c	/^typedef union uLoRaMacRxDelay{$/;"	u	file:
uMacCommandADRStatus	src/handle.c	/^typedef union uMacCommandADRStatus{$/;"	u	file:
uMacCommandChannelStatus	src/handle.c	/^typedef union uMacCommandChannelStatus{$/;"	u	file:
uMacCommandDLSettings	src/handle.c	/^typedef union uMacCommandDLSettings{$/;"	u	file:
uMacCommandDataRateTxPower	src/handle.c	/^typedef union uMacCommandDataRateTxPower{$/;"	u	file:
uMacCommandDrRange	src/handle.c	/^typedef union uMacCommandDrRange{$/;"	u	file:
uMacCommandMargin	src/handle.c	/^typedef union uMacCommandMargin{$/;"	u	file:
uMacCommandRXStatus	src/handle.c	/^typedef union uMacCommandRXStatus{$/;"	u	file:
uMacCommandRedundancy	src/handle.c	/^typedef union uMacCommandRedundancy{$/;"	u	file:
uMacCommandSettings	src/handle.c	/^typedef union uMacCommandSettings{$/;"	u	file:
udp_bind	src/handle.c	/^void udp_bind(const char* servaddr, const char* port, int* sockfd) {$/;"	f
update_db_by_addr_uint	src/db.c	/^int update_db_by_addr_uint(sqlite3* db, const char* column_name, const char* table_name, unsigned int devaddr, unsigned int data) {$/;"	f
update_db_by_deveui	src/db.c	/^int update_db_by_deveui(sqlite3* db, const char* column_name, const char* table_name, const char* deveui, const char* data, int seed) {$/;"	f
update_db_by_deveui_uint	src/db.c	/^int update_db_by_deveui_uint(sqlite3* db, const char* column_name, const char* table_name, const char* deveui, unsigned int data) {$/;"	f
update_db_by_sqlstr	src/db.c	/^int update_db_by_sqlstr(sqlite3* db, const char* sqlstr) {$/;"	f
update_decrypt_key_128	src/aes.c	/^static void update_decrypt_key_128( uint8_t k[N_BLOCK], uint8_t *rc )$/;"	f	file:
update_decrypt_key_256	src/aes.c	/^static void update_decrypt_key_256( uint8_t k[2 * N_BLOCK], uint8_t *rc )$/;"	f	file:
update_encrypt_key_128	src/aes.c	/^static void update_encrypt_key_128( uint8_t k[N_BLOCK], uint8_t *rc )$/;"	f	file:
update_encrypt_key_256	src/aes.c	/^static void update_encrypt_key_256( uint8_t k[2 * N_BLOCK], uint8_t *rc )$/;"	f	file:
value	src/parson.c	/^    JSON_Value_Value    value;$/;"	m	struct:json_value_t	file:
values	src/parson.c	/^    JSON_Value **values;$/;"	m	struct:json_object_t	file:
verify_utf8_sequence	src/parson.c	/^static int verify_utf8_sequence(const unsigned char *string, int *len) {$/;"	f	file:
xor_block	src/aes.c	/^static void xor_block( void *d, const void *s )$/;"	f	file:
