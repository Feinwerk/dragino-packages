#!/bin/sh /etc/rc.common

START=55
USE_PROCD=1

init_board() {
    if [ ! -d /var/iot ]; then 
        mkdir /var/iot
    fi
    if [ ! -d /var/iot/channels ]; then
        mkdir /var/iot/channels
    fi

    rmmod gpio_keys_polled
    modprobe gpio_keys_polled

    rmmod spi-gpio-custom
    insmod spi-gpio-custom bus0=1,14,16,26,0,8000000,15 bus1=2,18,21,19,0,8000000,24
    sleep 1

    /usr/bin/spirw

    board=`cat /var/iot/board`

    uci set system.vendor.web_model="$board"
    uci set gateway.general.model="$board"
    uci commit

    if [[ "$board" = "LG02" ]]; then
        process="lg02_pkt_fwd"
    elif [[ "$board" = "LG08P" ]]; then
        process="lora_pkt_fwd"
        rmmod spi-gpio-custom
        insmod spi-gpio-custom bus0=1,24,18,20,0,8000000,19 bus1=2,22,14,26,0,8000000,21
        /usr/bin/reset_lgw.sh start
        /usr/bin/generate-config.sh
    elif [[ "$board" = "LG08" ]]; then
        process="lora_pkt_fwd"
        rmmod spi-gpio-custom
        insmod spi-gpio-custom bus0=1,24,18,20,0,8000000,19 bus1=2,22,14,26,0,8000000,21
        /usr/bin/reset_lgw.sh start
        /usr/bin/generate-config.sh
    else
        exit 1
    fi
}

start_service() {
    init_board
    procd_open_instance
    procd_set_param command /usr/bin/"$process"
    procd_set_param file  /etc/conf/gateway
    procd_set_param stdout 1
    procd_set_param respawn
    procd_set_param pidfile /var/run/$process.pid
    procd_close_instance
}

reload_service() {
    stop
    start
}

service_triggers()
{
    procd_add_reload_trigger "network" "wireless" "gateway" "mqtt" "tcp_client"
}
